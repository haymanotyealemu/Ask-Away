{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\John\\\\Final-Project\\\\Ask-Away\\\\client\\\\src\\\\pages\\\\Topics.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { getPosts } from \"../actions/posts.actions/posts.actions/getPosts\";\nimport { getMostRecentPosts } from \"../actions/posts.actions/posts.actions/getMostRecentPosts\";\nimport { getMostCommentedPosts } from \"../actions/posts.actions/posts.actions/getMostCommentedPosts\";\nimport { getMostLikedPosts } from \"../actions/posts.actions/posts.actions/getMostLikedPosts\";\nimport { searchTopics } from \"../actions/posts.actions/searchTopics\";\nimport { connect } from \"react-redux\";\nimport TopicPostsWrapper from \"./TopicPosts/TopicPostsWrapper\";\n\nconst Topics = ({\n  getPosts,\n  getMostRecentPosts,\n  getMostCommentedPosts,\n  getMostLikedPosts,\n  searchTopics,\n  posts\n}) => {\n  _s();\n\n  let [dataFromSearch, setDataFromSearch] = useState(\"\");\n  let [topicsSortType, setTopicsSortType] = useState({\n    isTheOldest: false,\n    isTheMostRecent: true,\n    isTheMostCommented: false,\n    isTheMostLiked: false\n  });\n  let {\n    isTheMostCommented,\n    isTheOldest,\n    isTheMostLiked,\n    isTheMostRecent\n  } = topicsSortType;\n  useEffect(() => {\n    if (isTheOldest) getPosts();else if (isTheMostCommented) getMostCommentedPosts();else if (isTheMostLiked) getMostLikedPosts();else getMostRecentPosts();\n  }, []);\n\n  const onChange = e => setDataFromSearch(e.target.value);\n\n  const searchForTopic = () => {\n    if (dataFromSearch !== \"\" || dataFromSearch !== null) {\n      return searchTopics(dataFromSearch);\n    } else {\n      setTopicsSortType({\n        isTheMostRecent: true,\n        isTheMostCommented: false,\n        isTheMostLiked: false,\n        isTheOldest: false\n      });\n      getMostRecentPosts();\n    }\n  };\n\n  const changeTopicsType = changedType => {\n    if (changedType === \"isTheMostLiked\") {\n      setTopicsSortType({\n        isTheMostLiked: true,\n        isTheOldest: false,\n        isTheMostCommented: false,\n        isTheMostRecent: false\n      });\n      getMostLikedPosts();\n    } else if (changedType === \"isTheOldest\") {\n      setTopicsSortType({\n        isTheMostLiked: false,\n        isTheOldest: true,\n        isTheMostCommented: false,\n        isTheMostRecent: false\n      });\n      getPosts();\n    } else if (changedType === \"isTheMostCommented\") {\n      setTopicsSortType({\n        isTheMostLiked: false,\n        isTheOldest: false,\n        isTheMostCommented: true,\n        isTheMostRecent: false\n      });\n      getMostCommentedPosts();\n    } else {\n      setTopicsSortType({\n        isTheMostLiked: false,\n        isTheOldest: false,\n        isTheMostCommented: false,\n        isTheMostRecent: true\n      });\n      getMostRecentPosts();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"topics-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"app_color_font font__bold font__p topics-headline\",\n        children: \"Topics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isTheOldest ? \"header-checkbox app_color_font p__size font__p font__bold\" : \"header-checkbox app_color_font p__size font__p\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: isTheOldest,\n          checked: isTheOldest,\n          onChange: () => changeTopicsType(\"isTheOldest\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => changeTopicsType(\"isTheOldest\"),\n          children: \"The Oldest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isTheMostRecent ? \"header-checkbox app_color_font p__size font__p font__bold\" : \"header-checkbox app_color_font p__size font__p\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: () => changeTopicsType(\"isTheMostRecent\"),\n          value: isTheMostRecent,\n          checked: isTheMostRecent,\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => changeTopicsType(\"isTheMostRecent\"),\n          children: \"The most recent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isTheMostLiked ? \"header-checkbox app_color_font p__size font__p font__bold\" : \"header-checkbox app_color_font p__size font__p\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isTheMostLiked,\n          value: isTheMostLiked,\n          onChange: () => changeTopicsType(\"isTheMostLiked\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => changeTopicsType(\"isTheMostLiked\"),\n          children: \"The Most Liked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isTheMostCommented ? \"header-checkbox app_color_font p__size font__p font__bold\" : \"header-checkbox app_color_font p__size font__p\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isTheMostCommented,\n          value: isTheMostCommented,\n          onChange: () => changeTopicsType(\"isTheMostCommented\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => changeTopicsType(\"isTheMostCommented\"),\n          children: \"The Most Commented\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"search-topic-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"submit\",\n          value: dataFromSearch,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topic-search-button app_color_background font__p font__bold\",\n          onClick: () => searchForTopic(),\n          children: \"Search for topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topics-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(TopicPostsWrapper, {\n        isTheOldest: isTheOldest,\n        isTheMostCommented: isTheMostCommented,\n        isTheMostRecent: isTheMostRecent,\n        isTheMostLiked: isTheMostLiked,\n        posts: posts.posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Topics, \"UrbDQOK9fBdhK0xRbPZ7kxg6IJc=\");\n\n_c = Topics;\n\nconst mapStateToProps = state => ({\n  posts: state.posts\n});\n\nconst mapDispatchToProps = {\n  getPosts,\n  getMostRecentPosts,\n  getMostCommentedPosts,\n  getMostLikedPosts,\n  searchTopics\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Topics);\n\nvar _c;\n\n$RefreshReg$(_c, \"Topics\");","map":{"version":3,"sources":["C:/Users/John/Final-Project/Ask-Away/client/src/pages/Topics.js"],"names":["React","useState","useEffect","getPosts","getMostRecentPosts","getMostCommentedPosts","getMostLikedPosts","searchTopics","connect","TopicPostsWrapper","Topics","posts","dataFromSearch","setDataFromSearch","topicsSortType","setTopicsSortType","isTheOldest","isTheMostRecent","isTheMostCommented","isTheMostLiked","onChange","e","target","value","searchForTopic","changeTopicsType","changedType","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getPosts } from \"../actions/posts.actions/posts.actions/getPosts\";\r\nimport { getMostRecentPosts } from \"../actions/posts.actions/posts.actions/getMostRecentPosts\";\r\nimport { getMostCommentedPosts } from \"../actions/posts.actions/posts.actions/getMostCommentedPosts\";\r\nimport { getMostLikedPosts } from \"../actions/posts.actions/posts.actions/getMostLikedPosts\";\r\nimport { searchTopics } from \"../actions/posts.actions/searchTopics\";\r\nimport { connect } from \"react-redux\";\r\nimport TopicPostsWrapper from \"./TopicPosts/TopicPostsWrapper\";\r\n\r\nconst Topics = ({\r\n    getPosts,\r\n    getMostRecentPosts,\r\n    getMostCommentedPosts,\r\n    getMostLikedPosts,\r\n    searchTopics,\r\n    posts,\r\n}) => {\r\n    let [dataFromSearch, setDataFromSearch] = useState(\"\");\r\n    let [topicsSortType, setTopicsSortType] = useState({\r\n    isTheOldest: false,\r\n    isTheMostRecent: true,\r\n    isTheMostCommented: false,\r\n    isTheMostLiked: false,\r\n  });\r\n\r\n  let {\r\n    isTheMostCommented,\r\n    isTheOldest,\r\n    isTheMostLiked,\r\n    isTheMostRecent,\r\n  } = topicsSortType;\r\n\r\n  useEffect(() => {\r\n    if (isTheOldest) getPosts();\r\n    else if (isTheMostCommented) getMostCommentedPosts();\r\n    else if (isTheMostLiked) getMostLikedPosts();\r\n    else getMostRecentPosts();\r\n  }, []);\r\n\r\n  const onChange = (e) => setDataFromSearch(e.target.value);\r\n\r\n  const searchForTopic = () => {\r\n    if (dataFromSearch !== \"\" || dataFromSearch !== null) {\r\n      return searchTopics(dataFromSearch);\r\n    } else {\r\n      setTopicsSortType({\r\n        isTheMostRecent: true,\r\n        isTheMostCommented: false,\r\n        isTheMostLiked: false,\r\n        isTheOldest: false,\r\n      });\r\n      getMostRecentPosts();\r\n    }\r\n  };\r\n\r\n  const changeTopicsType = (changedType) => {\r\n    if (changedType === \"isTheMostLiked\") {\r\n      setTopicsSortType({\r\n        isTheMostLiked: true,\r\n        isTheOldest: false,\r\n        isTheMostCommented: false,\r\n        isTheMostRecent: false,\r\n      });\r\n      getMostLikedPosts();\r\n    } else if (changedType === \"isTheOldest\") {\r\n      setTopicsSortType({\r\n        isTheMostLiked: false,\r\n        isTheOldest: true,\r\n        isTheMostCommented: false,\r\n        isTheMostRecent: false,\r\n      });\r\n      getPosts();\r\n    } else if (changedType === \"isTheMostCommented\") {\r\n      setTopicsSortType({\r\n        isTheMostLiked: false,\r\n        isTheOldest: false,\r\n        isTheMostCommented: true,\r\n        isTheMostRecent: false,\r\n      });\r\n      getMostCommentedPosts();\r\n    } else {\r\n      setTopicsSortType({\r\n        isTheMostLiked: false,\r\n        isTheOldest: false,\r\n        isTheMostCommented: false,\r\n        isTheMostRecent: true,\r\n      });\r\n      getMostRecentPosts();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"topics-header\">\r\n        <p className=\"app_color_font font__bold font__p topics-headline\">\r\n          Topics\r\n        </p>\r\n        <br />\r\n\r\n        <div\r\n          className={\r\n            isTheOldest\r\n              ? \"header-checkbox app_color_font p__size font__p font__bold\"\r\n              : \"header-checkbox app_color_font p__size font__p\"\r\n          }\r\n        >\r\n          <input\r\n            type=\"checkbox\"\r\n            value={isTheOldest}\r\n            checked={isTheOldest}\r\n            onChange={() => changeTopicsType(\"isTheOldest\")}\r\n          />\r\n          <p onClick={() => changeTopicsType(\"isTheOldest\")}>The Oldest</p>\r\n        </div>\r\n\r\n        <div\r\n          className={\r\n            isTheMostRecent\r\n              ? \"header-checkbox app_color_font p__size font__p font__bold\"\r\n              : \"header-checkbox app_color_font p__size font__p\"\r\n          }\r\n        >\r\n          <input\r\n            onChange={() => changeTopicsType(\"isTheMostRecent\")}\r\n            value={isTheMostRecent}\r\n            checked={isTheMostRecent}\r\n            type=\"checkbox\"\r\n          />\r\n          <p onClick={() => changeTopicsType(\"isTheMostRecent\")}>\r\n            The most recent\r\n          </p>\r\n        </div>\r\n\r\n        <div\r\n          className={\r\n            isTheMostLiked\r\n              ? \"header-checkbox app_color_font p__size font__p font__bold\"\r\n              : \"header-checkbox app_color_font p__size font__p\"\r\n          }\r\n        >\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isTheMostLiked}\r\n            value={isTheMostLiked}\r\n            onChange={() => changeTopicsType(\"isTheMostLiked\")}\r\n          />\r\n          <p onClick={() => changeTopicsType(\"isTheMostLiked\")}>\r\n            The Most Liked\r\n          </p>\r\n        </div>\r\n\r\n        <div\r\n          className={\r\n            isTheMostCommented\r\n              ? \"header-checkbox app_color_font p__size font__p font__bold\"\r\n              : \"header-checkbox app_color_font p__size font__p\"\r\n          }\r\n        >\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isTheMostCommented}\r\n            value={isTheMostCommented}\r\n            onChange={() => changeTopicsType(\"isTheMostCommented\")}\r\n          />\r\n          <p onClick={() => changeTopicsType(\"isTheMostCommented\")}>\r\n            The Most Commented\r\n          </p>\r\n        </div>\r\n\r\n        <form className=\"search-topic-wrapper\">\r\n          <textarea\r\n            type=\"submit\"\r\n            value={dataFromSearch}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n\r\n          <div\r\n            className=\"topic-search-button app_color_background font__p font__bold\"\r\n            onClick={() => searchForTopic()}\r\n          >\r\n            Search for topic\r\n          </div>\r\n        </form>\r\n      </header>\r\n\r\n      <div className=\"topics-wrapper\">\r\n        <TopicPostsWrapper\r\n          isTheOldest={isTheOldest}\r\n          isTheMostCommented={isTheMostCommented}\r\n          isTheMostRecent={isTheMostRecent}\r\n          isTheMostLiked={isTheMostLiked}\r\n          posts={posts.posts}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.posts,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getPosts,\r\n  getMostRecentPosts,\r\n  getMostCommentedPosts,\r\n  getMostLikedPosts,\r\n  searchTopics,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Topics);"]},"metadata":{},"sourceType":"module"}