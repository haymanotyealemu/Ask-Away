{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\John\\\\Final-Project\\\\Ask-Away\\\\client\\\\src\\\\pages\\\\UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUserById } from \"../actions/users.actions/getUserById\";\nimport { getUserPostsById } from \"../actions/users.actions/getUserPostsById\";\nimport Spinner from \"../Spinner\";\nimport UserPostsWrapper from \"./UserPosts/UserPostsWrapper\";\nimport UserProfileData from \"../components/userProfile/UserProfileData\";\n\nconst UserProfile = ({\n  users,\n  userProfile,\n  posts: {\n    post\n  },\n  match,\n  getUserById,\n  getUserPostsById\n}) => {\n  _s();\n\n  useEffect(() => {\n    getUserById(match.params.user_id);\n    getUserPostsById(match.params.user_id);\n  }, []);\n  return users.profilePosts === [] || userProfile === null || post === users.profilePosts ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-page-wrapper flex__center\",\n    children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account-page-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userProfile.avatar,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserProfileData, {\n        userProfile: userProfile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-posts\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"user-posts-header-wrapper app_color_background\",\n          children: post !== null || post !== [] ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-posts-header font__p font__bold\",\n            children: \"His/Her posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-posts-header font__p font__bold\",\n            children: \"He/She hasn't added post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UserPostsWrapper, {\n          posts: users.profilePosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserProfile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UserProfile;\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  userProfile: state.users.userProfile,\n  posts: state.posts\n});\n\nexport default connect(mapStateToProps, {\n  getUserById,\n  getUserPostsById\n})(UserProfile);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["C:/Users/John/Final-Project/Ask-Away/client/src/pages/UserProfile.js"],"names":["React","useEffect","connect","getUserById","getUserPostsById","Spinner","UserPostsWrapper","UserProfileData","UserProfile","users","userProfile","posts","post","match","params","user_id","profilePosts","avatar","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,sCAA5B;AACA,SAASC,gBAAT,QAAiC,2CAAjC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,eAAP,MAA4B,2CAA5B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,KADmB;AAEnBC,EAAAA,WAFmB;AAGnBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF,GAHY;AAInBC,EAAAA,KAJmB;AAKnBV,EAAAA,WALmB;AAMnBC,EAAAA;AANmB,CAAD,KAOd;AAAA;;AACJH,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,WAAW,CAACU,KAAK,CAACC,MAAN,CAAaC,OAAd,CAAX;AACAX,IAAAA,gBAAgB,CAACS,KAAK,CAACC,MAAN,CAAaC,OAAd,CAAhB;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SAAON,KAAK,CAACO,YAAN,KAAuB,EAAvB,IACLN,WAAW,KAAK,IADX,IAELE,IAAI,KAAKH,KAAK,CAACO,YAFV,gBAGL;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA,2BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAHK,gBAOL;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEN,WAAW,CAACO,MAAtB;AAA8B,QAAA,GAAG,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,eAAD;AAAiB,QAAA,WAAW,EAAEP;AAA9B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,gDAAlB;AAAA,oBACGE,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,EAA1B,gBACC;AAAG,YAAA,SAAS,EAAC,sCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,gBAKC;AAAG,YAAA,SAAS,EAAC,sCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE,QAAC,gBAAD;AAAkB,UAAA,KAAK,EAAEH,KAAK,CAACO;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAPF;AA6BD,CA1CD;;GAAMR,W;;KAAAA,W;;AA4CN,MAAMU,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,KAAK,EAAEU,KAAK,CAACV,KADqB;AAElCC,EAAAA,WAAW,EAAES,KAAK,CAACV,KAAN,CAAYC,WAFS;AAGlCC,EAAAA,KAAK,EAAEQ,KAAK,CAACR;AAHqB,CAAZ,CAAxB;;AAMA,eAAeT,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CACbI,WADa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserById } from \"../actions/users.actions/getUserById\";\r\nimport { getUserPostsById } from \"../actions/users.actions/getUserPostsById\";\r\nimport Spinner from \"../Spinner\";\r\nimport UserPostsWrapper from \"./UserPosts/UserPostsWrapper\";\r\nimport UserProfileData from \"../components/userProfile/UserProfileData\";\r\n\r\nconst UserProfile = ({\r\n  users,\r\n  userProfile,\r\n  posts: { post },\r\n  match,\r\n  getUserById,\r\n  getUserPostsById,\r\n}) => {\r\n  useEffect(() => {\r\n    getUserById(match.params.user_id);\r\n    getUserPostsById(match.params.user_id);\r\n  }, []);\r\n\r\n  return users.profilePosts === [] ||\r\n    userProfile === null ||\r\n    post === users.profilePosts ? (\r\n    <div className=\"all-page-wrapper flex__center\">\r\n      <Spinner />\r\n    </div>\r\n  ) : (\r\n    <div className=\"account-page-wrapper\">\r\n      <div className=\"data\">\r\n        <img src={userProfile.avatar} alt=\"\" />\r\n\r\n        <UserProfileData userProfile={userProfile} />\r\n        <div className=\"user-posts\">\r\n          <header className=\"user-posts-header-wrapper app_color_background\">\r\n            {post !== null || post !== [] ? (\r\n              <p className=\"user-posts-header font__p font__bold\">\r\n                His/Her posts\r\n              </p>\r\n            ) : (\r\n              <p className=\"user-posts-header font__p font__bold\">\r\n                He/She hasn't added post\r\n              </p>\r\n            )}\r\n          </header>\r\n          <UserPostsWrapper posts={users.profilePosts} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.users,\r\n  userProfile: state.users.userProfile,\r\n  posts: state.posts,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserById, getUserPostsById })(\r\n  UserProfile\r\n);\r\n"]},"metadata":{},"sourceType":"module"}