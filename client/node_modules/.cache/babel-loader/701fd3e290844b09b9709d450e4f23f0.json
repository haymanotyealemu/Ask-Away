{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\John\\\\Final-Project\\\\Ask-Away\\\\client\\\\src\\\\pages\\\\ChangePassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { checkPasswords } from \"../actions/auth.actions/checkPasswords\";\nimport { changePassword } from \"../actions/auth.actions/changePassword\";\nimport { connect } from \"react-redux\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport PasswordChangeMessage from \"../components/PasswordChangeMessage\";\n\nconst ChangePassword = ({\n  auth: {\n    errors,\n    isAllowedToChangePassword\n  },\n  checkPasswords,\n  changePassword\n}) => {\n  _s();\n\n  let [isSubmitted, setIsSubmitted] = useState(false);\n  let [areNotPasswordsFullfiled, setAreNotPasswordsFullfiled] = useState(false);\n  let [arePasswordsWrong, setArePasswordsWrong] = useState(false);\n  let [formData, setFormData] = useState({\n    firstPassword: \"\",\n    secondPassword: \"\",\n    newPassword: \"\"\n  });\n  let {\n    firstPassword,\n    secondPassword,\n    newPassword\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const resetSentData = () => {\n    setFormData(\"\");\n  };\n\n  const submitData = () => {\n    if (firstPassword !== secondPassword) {\n      setArePasswordsWrong(true);\n      setAreNotPasswordsFullfiled(false);\n    } else if (firstPassword === \"\" || firstPassword === null || secondPassword === \"\" || secondPassword === null) {\n      setAreNotPasswordsFullfiled(true);\n    } else {\n      checkPasswords(firstPassword);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"change-profile-page-wrapper\",\n    children: [isAllowedToChangePassword === false && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"change-profile-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"change-password-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"change-password-label p__size font__p font__bold\",\n          children: \"Type actual password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"change-password-input\",\n          placeholder: \"Type Something...\",\n          type: \"text\",\n          value: firstPassword,\n          name: \"firstPassword\",\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"change-password-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"change-password-label p__size font__p font__bold\",\n          children: \"Type again password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"change-password-input\",\n          placeholder: \"Type Something...\",\n          type: \"text\",\n          value: secondPassword,\n          name: \"secondPassword\",\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), areNotPasswordsFullfiled && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        errorMessage: \"You haven't fullfiled some input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), arePasswordsWrong && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        errorMessage: \"Passwords are wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), errors === false && (errors !== {} || errors !== null) && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        errorMessage: \"Something went wrong...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-page-button\",\n        onClick: e => submitData(e),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), isAllowedToChangePassword && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"change-profile-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"change-password-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"change-password-label p__size font__p font__bold\",\n          children: \"Type New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Type New Password...\",\n          value: newPassword,\n          name: \"newPassword\",\n          onChange: e => onChange(e),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-page-button\",\n          style: {\n            marginTop: \".5em\"\n          },\n          onClick: () => {\n            changePassword(newPassword);\n            setIsSubmitted(true);\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"change-profile-btn\",\n          onClick: () => resetSentData(),\n          children: \"Go back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), isAllowedToChangePassword && errors && isSubmitted && /*#__PURE__*/_jsxDEV(PasswordChangeMessage, {\n      message: \"Password hasn't changed, something went wrong...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), isAllowedToChangePassword && !errors && isSubmitted && /*#__PURE__*/_jsxDEV(PasswordChangeMessage, {\n      message: \"Password has changed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChangePassword, \"lCC+XwQcPFjBOWAkcHOd8AlKEOA=\");\n\n_c = ChangePassword;\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  checkPasswords,\n  changePassword\n})(ChangePassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["C:/Users/John/Final-Project/Ask-Away/client/src/pages/ChangePassword.js"],"names":["React","useState","checkPasswords","changePassword","connect","ErrorMessage","PasswordChangeMessage","ChangePassword","auth","errors","isAllowedToChangePassword","isSubmitted","setIsSubmitted","areNotPasswordsFullfiled","setAreNotPasswordsFullfiled","arePasswordsWrong","setArePasswordsWrong","formData","setFormData","firstPassword","secondPassword","newPassword","onChange","e","target","name","value","resetSentData","submitData","marginTop","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { checkPasswords } from \"../actions/auth.actions/checkPasswords\";\r\nimport { changePassword } from \"../actions/auth.actions/changePassword\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\nimport PasswordChangeMessage from \"../components/PasswordChangeMessage\";\r\n\r\nconst ChangePassword = ({\r\n  auth: { errors, isAllowedToChangePassword },\r\n  checkPasswords,\r\n  changePassword,\r\n}) => {\r\n  let [isSubmitted, setIsSubmitted] = useState(false);\r\n  let [areNotPasswordsFullfiled, setAreNotPasswordsFullfiled] = useState(false);\r\n  let [arePasswordsWrong, setArePasswordsWrong] = useState(false);\r\n  let [formData, setFormData] = useState({\r\n    firstPassword: \"\",\r\n    secondPassword: \"\",\r\n    newPassword: \"\",\r\n    \r\n  });\r\n\r\n  let { firstPassword, secondPassword, newPassword } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const resetSentData = () => {\r\n      setFormData(\"\");\r\n    };\r\n  const submitData = () => {\r\n    if (firstPassword !== secondPassword) {\r\n      setArePasswordsWrong(true);\r\n      setAreNotPasswordsFullfiled(false);\r\n    } else if (\r\n      firstPassword === \"\" ||\r\n      firstPassword === null ||\r\n      secondPassword === \"\" ||\r\n      secondPassword === null\r\n    ) {\r\n      setAreNotPasswordsFullfiled(true);\r\n    } else {\r\n      checkPasswords(firstPassword);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"change-profile-page-wrapper\">\r\n      {isAllowedToChangePassword === false && (\r\n        <form className=\"change-profile-section\">\r\n          <div className=\"change-password-input-wrapper\">\r\n            <label className=\"change-password-label p__size font__p font__bold\">\r\n              Type actual password\r\n            </label>\r\n            <input\r\n              className=\"change-password-input\"\r\n              placeholder=\"Type Something...\"\r\n              type=\"text\"\r\n              value={firstPassword}\r\n              name=\"firstPassword\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"change-password-input-wrapper\">\r\n            <label className=\"change-password-label p__size font__p font__bold\">\r\n              Type again password\r\n            </label>\r\n            <input\r\n              className=\"change-password-input\"\r\n              placeholder=\"Type Something...\"\r\n              type=\"text\"\r\n              value={secondPassword}\r\n              name=\"secondPassword\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          {areNotPasswordsFullfiled && (\r\n            <ErrorMessage errorMessage=\"You haven't fullfiled some input\" />\r\n          )}\r\n\r\n          {arePasswordsWrong && (\r\n            <ErrorMessage errorMessage=\"Passwords are wrong\" />\r\n          )}\r\n\r\n          {errors === false && (errors !== {} || errors !== null) && (\r\n            <ErrorMessage errorMessage=\"Something went wrong...\" />\r\n          )}\r\n          <div className=\"password-page-button\" onClick={(e) => submitData(e)}>\r\n            Submit\r\n          </div>\r\n        </form>\r\n      )}\r\n\r\n      {isAllowedToChangePassword && (\r\n        <form className=\"change-profile-section\">\r\n          <div className=\"change-password-input-wrapper\">\r\n            <label className=\"change-password-label p__size font__p font__bold\">\r\n              Type New Password\r\n            </label>\r\n\r\n            <input\r\n              placeholder=\"Type New Password...\"\r\n              value={newPassword}\r\n              name=\"newPassword\"\r\n              onChange={(e) => onChange(e)}\r\n              type=\"text\"\r\n            />\r\n\r\n            <div\r\n              className=\"password-page-button\"\r\n              style={{\r\n                marginTop: \".5em\",\r\n              }}\r\n              onClick={() => {\r\n                changePassword(newPassword);\r\n                setIsSubmitted(true);\r\n              }}\r\n            >\r\n              Submit\r\n            </div>\r\n            <div className=\"change-profile-btn\" onClick={() => resetSentData()}>\r\n              Go back\r\n            </div>\r\n          </div>\r\n        </form>\r\n      )}\r\n      {isAllowedToChangePassword && errors && isSubmitted && (\r\n        <PasswordChangeMessage message=\"Password hasn't changed, something went wrong...\" />\r\n      )}\r\n\r\n      {isAllowedToChangePassword && !errors && isSubmitted && (\r\n        <PasswordChangeMessage message=\"Password has changed\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { checkPasswords, changePassword })(\r\n  ChangePassword\r\n);\r\n"]},"metadata":{},"sourceType":"module"}