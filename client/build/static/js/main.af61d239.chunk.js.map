{"version":3,"sources":["comment3.jpg","pages/LandingPage.js","constants/auth.constants.js","middleware/setAuthenticationToken.js","actions/auth.actions/userLoaded.js","components/ErrorMessage.js","pages/LoginPage.js","actions/auth.actions/loginUser.js","pages/RegisterPage.js","actions/auth.actions/registerUser.js","pages/Account.js","pages/ContactPage.js","pages/ChangeProfile.js","actions/auth.actions/changeUserData.js","constants/users.constants.js","Spinner.js","constants/posts.constants.js","actions/users.actions/getUserPosts.js","pages/UserPosts/UserPost.js","actions/posts.actions/posts.actions/removePost.js","pages/UserPosts/UserPostsWrapper.js","components/userProfile/UserProfileData.js","pages/UserProfile.js","actions/users.actions/getUserById.js","actions/users.actions/getUserPostById.js","actions/posts.actions/posts.actions/clearPost.js","actions/posts.actions/posts.actions/getPost.js","pages/Comments/Comment.js","actions/posts.actions/likes.actions/removeLikeFromComment.js","actions/posts.actions/likes.actions/addLikeToComment.js","pages/Comments/CommentsWrapper.js","pages/TopicPosts/TopicSection.js","pages/TopicPosts/TopicPageForm.js","pages/TopicPage.js","actions/posts.actions/likes.actions/removeLikeFromPost.js","actions/posts.actions/likes.actions/addLikeToTopicPage.js","actions/posts.actions/comments.actions/createComment.js","actions/posts.actions/posts.actions/getPosts.js","actions/posts.actions/posts.actions/getMostRecentPosts.js","actions/posts.actions/posts.actions/getMostCommentedPosts.js","actions/posts.actions/posts.actions/getMostLikedPosts.js","pages/TopicPosts/TopicPost.js","actions/posts.actions/likes.actions/addLikeToPost.js","actions/posts.actions/likes.actions/removeLikeFromTopicPost.js","pages/TopicPosts/TopicPostsWrapper.js","pages/Topics.js","actions/posts.actions/searchTopics.js","actions/users.actions/getUsers.js","pages/Users/User.js","pages/Users/UsersWrapper.js","pages/Users/SearchUser.js","actions/users.actions/searchByUsername.js","pages/Users.js","components/AddPost/CreatePost.js","components/AddPost/Output.js","pages/AddPost.js","actions/posts.actions/posts.actions/createPost.js","components/navbar/NavbarLinks.js","components/navbar/NavbarLogo.js","components/Navbar.js","actions/auth.actions/logOut.js","reducers/users.reducer.js","reducers/posts.reducer.js","reducers/auth.reducer.js","reducers/index.js","store.js","routes/IsLoggedInRoute.js","routes/PrivateRoute.js","components/PasswordChangeMessage.js","pages/ChangePassword.js","actions/auth.actions/checkPasswords.js","actions/auth.actions/changePassword.js","components/AccountPage/SingleAccountData.js","components/AccountPage/AccountPageSection.js","pages/MyProfile.js","App.js","index.js"],"names":["LandingPage","className","to","src","comment3","alt","AUTH_FORM_SUCCESS","AUTH_FORM_FAIL","AUTH_ERROR","USER_IS_LOADED","LOG_OUT","CHECK_PASSWORDS","CHANGE_PASSWORD_FAIL","CHANGE_PROFILE","CHANGE_USER_DATA_FAILED","GET_USERS","SEARCH_BY_USERNAME","setAuthenticationToken","token","axios","defaults","headers","common","userLoaded","dispatch","a","localStorage","getItem","get","res","type","payload","data","console","log","message","ErrorMessage","errorMessage","style","color","textAlign","connect","state","error","auth","errors","loginUser","userData","config","body","JSON","stringify","post","response","useState","email","password","setUserData","onChange","e","target","name","value","onClick","registerUser","hasPasswordShowed","setShowPassword","firstName","lastName","userName","Account","ContactPage","posts","changeUserData","userDataToChange","put","alert","dataType","setDataType","newUserData","setNewUserData","isTextError","setIsTextError","dataToChange","placeholder","sendData","USER_ERROR","GET_POST_BY_USER_ID","GET_USER_POSTS","GET_USER_BY_ID","Spinner","height","width","timeout","MAKE_POST","POST_ERROR","REMOVE_POST","GET_POSTS","GET_POST","CLEAR_POSTS","SEARCH_TOPICS","MOST_LIKED_POSTS","MOST_COMMENTED","ADD_LIKE","THE_MOST_RECENT_POSTS","REMOVE_LIKE_FROM_COMMENT","CLEAR_POST","getUserPosts","mapDispatchToProps","removePost","post_id","delete","format","date","postText","likes","length","comments","display","user","_id","UserPostsWrapper","map","UserProfileData","userProfile","marginRight","users","getUserById","user_id","getUserPostsById","match","useEffect","params","profilePosts","avatar","clearPost","getPost","removeLikeFromComment","comment_id","like_id","addLikeToComment","comment","commentText","find","like","CommentsWrapper","TopicSection","addLikeToTopicPage","removeLikeFromPost","TopicPageForm","createComment","setCommentText","isLoggedIn","topic_id","getPosts","getMostRecentPosts","getMostCommentedPosts","getMostLikedPosts","addLikeToPost","isOldest","isMostRecent","isMostCommented","isMostLiked","removeLikeFromTopicPost","isTheOldest","isTheMostCommented","isTheMostRecent","isTheMostLiked","TopicPostsWrapper","searchTopics","searchPost","dataFromSearch","setDataFromSearch","topicsSortType","setTopicsSortType","changeTopicsType","changedType","checked","searchForTopic","getUsers","User","UsersWrapper","searchByUsername","searchValue","searchedUsername","setSearchedUsername","searchForUser","CreatePost","createPost","setpostText","Output","textDecoration","setTimeout","NavbarLinks","logOut","NavbarLogo","isSidebar","setSidebar","transition","zIndex","initialState","action","isLoading","isAllowedToChangePassword","isPasswordChanged","setItem","removeItem","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Component","component","rest","render","props","PasswordChangeMessage","checkPasswords","passwordToCheck","changePassword","newPassword","isSubmitted","setIsSubmitted","setAreNotPasswordsFullfiled","setArePasswordsWrong","firstPassword","secondPassword","formData","setFormData","marginTop","SingleAccountData","dataName","dataToShow","AccountPageSection","App","path","exact","Users","Topics","UserProfile","TopicPage","RegisterPage","LoginPage","ChangePassword","AddPost","ChangeProfile","MyProfile","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.af61d239.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/comment3.e4404548.jpg\";","import React from \"react\";\r\nimport comment3 from \"../comment3.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <div className=\"landing-wrapper\">\r\n      <div className=\"text-wrapper\">\r\n        <div className=\"text-header-wrapper\">\r\n          <p className=\"text-header font__p p__size\">Welcome in</p>\r\n          <span className=\"larger\">Ask Away! </span>\r\n        </div>\r\n\r\n        <div className=\"text-section font__p p__size\">\r\n        <span className='app_color_font style'>Ask Away!</span> is a new forum about achieving success\r\n          <br />\r\n          If You are looking for answers on questions like:\r\n          <ul>\r\n            <li>How to start my business?</li>\r\n            <li>How to grow company?</li>\r\n            <li>How to improve yourself every day</li>\r\n            <li>or You just want to share Your story</li>\r\n          </ul>\r\n          <div className=\"text-button-wrapper\">\r\n            <Link to=\"/register\">Register in</Link> and add post!\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"image-wrapper\">\r\n        <img src={ comment3 } className=\"image\" alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","export const AUTH_FORM_SUCCESS = \"AUTH_FORM_SUCCESS\";\r\nexport const AUTH_FORM_FAIL = \"AUTH_FORM_FAIL\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const USER_IS_LOADED = \"USER_IS_LOADED\";\r\nexport const LOG_OUT = \"LOG_OUT\";\r\nexport const CHECK_PASSWORDS = \"CHECK_PASSWORDS\";\r\nexport const CHANGE_PASSWORD = \"CHANGE_PASSWORD\";\r\nexport const CHANGE_PASSWORD_FAIL = \"CHANGE_PASSWORD_FAIL\";\r\nexport const CHANGE_PROFILE = \"CHANGE_PROFILE\";\r\nexport const CHANGE_USER_DATA_FAILED = \"CHANGE_USER_DATA_FAILED\";\r\nexport const GET_USERS = \"GET_USERS\";\r\nexport const SEARCH_BY_USERNAME = \"SEARCH_BY_USERNAME\";","import axios from \"axios\";\r\n\r\nconst setAuthenticationToken = (token) => {\r\n  if (token) axios.defaults.headers.common[\"authentication-token\"] = token;\r\n  else delete axios.defaults.headers.common[\"authentication-token\"];\r\n};\r\n\r\nexport default setAuthenticationToken;\r\n","import axios from \"axios\";\r\nimport { USER_IS_LOADED, AUTH_ERROR } from \"../../constants/auth.constants\";\r\nimport setAuthenticationToken from \"../../middleware/setAuthenticationToken\";\r\n\r\nexport const userLoaded = () => async (dispatch) => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    setAuthenticationToken(localStorage.getItem(\"token\"));\r\n  }\r\n  try {\r\n    const res = await axios.get(\"http://localhost:8000/api/users/\");\r\n    dispatch({\r\n      type: USER_IS_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};","import React from \"react\";\r\n\r\nconst ErrorMessage = ({ errorMessage }) => {\r\n  return (\r\n    <div>\r\n      <p\r\n        className=\"font__bold font__p p__size\"\r\n        style={{\r\n          color: \"#fb2f2f\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        {errorMessage}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;","import React, { useState } from \"react\";\r\nimport { loginUser } from \"../actions/auth.actions/loginUser\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\n\r\nconst LoginPage = ({ loginUser, error }) => {\r\n  const [userData, setUserData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = userData;\r\n\r\n  const onChange = (e) =>\r\n    setUserData({ ...userData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <main className=\"register-page-wrapper\">\r\n      <form className=\"register-section\">\r\n        <div className=\"inputs-wrapper\">\r\n          <header className=\"register-header-wrapper\">\r\n            <p className=\"font__p p__size register-header\">\r\n              <i className=\"fas fa-users users-icon app_color_font\"></i>\r\n              Log in\r\n            </p>\r\n          </header>\r\n\r\n          <div className=\"label-wrapper\">\r\n            <label className=\"label__register p__size\">E-mail</label>\r\n          </div>\r\n          <input\r\n            name=\"email\"\r\n            value={email}\r\n            type=\"email\"\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n\r\n          <div className=\"label-wrapper\">\r\n            <label className=\"label__register p__size\">Password</label>\r\n          </div>\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n\r\n          <div className=\"label-wrapper\">\r\n            <Link to=\"/register\">\r\n              <p className=\"p__size font__p password__info\">Sign up</p>\r\n            </Link>\r\n          </div>\r\n          {error && (error !== null || error !== \"\" || error !== {}) && (\r\n            <ErrorMessage errorMessage=\"Wrong e-mail or password\" />\r\n          )}\r\n\r\n          <div\r\n            className=\"button-wrapper app_color_background\"\r\n            onClick={(e) => loginUser(userData)}\r\n          >\r\n            <p className=\"button-letter\">Log in</p>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.auth.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser })(LoginPage);\r\n","import axios from \"axios\";\r\nimport {\r\n  AUTH_FORM_SUCCESS,\r\n  AUTH_FORM_FAIL,\r\n} from \"../../constants/auth.constants\";\r\nimport { userLoaded } from \"../auth.actions/userLoaded\";\r\n\r\nexport const loginUser = (userData) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify(userData);\r\n\r\n    const response = await axios.post(\r\n      \"http://localhost:8000/api/users/login\",\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: AUTH_FORM_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n    dispatch(userLoaded());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: AUTH_FORM_FAIL,\r\n      payload: error,\r\n    });\r\n  }\r\n};","import React, { useState } from \"react\";\r\nimport { registerUser } from \"../actions/auth.actions/registerUser\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\n\r\nconst RegisterPage = ({ registerUser, error }) => {\r\n  const [hasPasswordShowed, setShowPassword] = useState(false);\r\n\r\n  const [userData, setUserData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    userName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { firstName, lastName, userName, email, password } = userData;\r\n\r\n  const onChange = (e) =>\r\n    setUserData({ ...userData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <main className=\"register-page-wrapper\">\r\n      <form className=\"register-section\">\r\n        <div className=\"inputs-wrapper\">\r\n          <header className=\"register-header-wrapper\">\r\n            <p className=\"font__p p__size register-header\">\r\n              <i className=\"fas fa-users users-icon app_color_font\"></i>\r\n              Sign Up\r\n            </p>\r\n          </header>\r\n\r\n          <div className=\"label-wrapper\">\r\n            <label className=\"label__register p__size\">first Name</label>\r\n          </div>\r\n\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            value={firstName}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n\r\n          <div className=\"label-wrapper\">\r\n            <label className=\"label__register p__size\">Last Name</label>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            value={lastName}\r\n            name=\"lastName\"\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n\r\n          <div className=\"label-wrapper\">\r\n            <label className=\"label__register p__size\">Username</label>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            value={userName}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n\r\n          <div className=\"label-wrapper\">\r\n            <label className=\"label__register p__size\">E-mail</label>\r\n          </div>\r\n          <input\r\n            name=\"email\"\r\n            value={email}\r\n            type=\"email\"\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n\r\n          <div className=\"label-wrapper\">\r\n            <label className=\"label__register p__size\">Password</label>\r\n          </div>\r\n\r\n          <input\r\n            name=\"password\"\r\n            type={hasPasswordShowed ? \"text\" : \"password\"}\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n\r\n          <i\r\n            onClick={() => setShowPassword(!hasPasswordShowed)}\r\n            className={hasPasswordShowed ? \"fas fa-eye\" : \"fas fa-eye-slash\"}\r\n          ></i>\r\n\r\n          <div className=\"label-wrapper\">\r\n            <p className=\"p__size font__p password__info\">\r\n              <i className=\"fas fa-user-check app_color_font\"></i> Password must\r\n              have at least 6 letters\r\n            </p>\r\n          </div>\r\n\r\n          {error && (error !== null || error !== \"\" || error !== {}) && (\r\n            <ErrorMessage errorMessage=\"Something went wrong...\" />\r\n          )}\r\n\r\n          <div\r\n            className=\"button-wrapper app_color_background\"\r\n            onClick={() => registerUser(userData)}\r\n          >\r\n            <p className=\"button-letter\">Sign Up</p>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.auth.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(RegisterPage);","import axios from \"axios\";\r\nimport { userLoaded } from \"./userLoaded\";\r\nimport {\r\n  AUTH_FORM_SUCCESS,\r\n  AUTH_FORM_FAIL,\r\n} from \"../../constants/auth.constants\";\r\n\r\nexport const registerUser = (userData) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify(userData);\r\n\r\n    const response = await axios.post(\r\n      \"http://localhost:8000/api/users/register\",\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: AUTH_FORM_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n    dispatch(userLoaded());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: AUTH_FORM_FAIL,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport comment3 from \"../comment3.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Account = () => {\r\n  return (\r\n    <div className=\"dashboard-wrapper\">\r\n      <div className=\"image-wrapper\">\r\n        <img src={comment3} alt=\"\" className=\"dashboard-image\" />\r\n      </div>\r\n\r\n      <div className=\"dashboard-links-wrapper\">\r\n        <div className=\"dashboard-links\">\r\n        <div className=\"dashboard-link font__p font__bold p__size\">\r\n            <Link to=\"/my-profile\"className=\"dashboard-link-href\">\r\n              My Profile\r\n            </Link>\r\n        </div>\r\n          <div className=\"dashboard-link font__p font__bold p__size\">\r\n            <Link to=\"/change-profile\" className=\"dashboard-link-href\">\r\n              Change Profile\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"dashboard-link font__p font__bold p__size\">\r\n            <Link to=\"/contact-us\" className=\"dashboard-link-href\">\r\n              Contact Us\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"dashboard-link font__p font__bold p__size\">\r\n            <Link to=\"/change-password\" className=\"dashboard-link-href\">\r\n              Change password\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React from \"react\";\r\n\r\nconst ContactPage = () => {\r\n  return (\r\n    <div className=\"change-profile-page-wrapper\">\r\n      <div className=\"change-profile-section p__size font__bold font__p\">\r\n        <p>If you want to contact with us:</p>\r\n        <p>send email on</p>\r\n        <p className=\"app_color_font\">Ask-Away@gmail.com</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactPage;","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeUserData } from \"../actions/auth.actions/changeUserData\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\n\r\nconst ChangeProfile = ({ changeUserData, posts: { errors } }) => {\r\n  let [dataType, setDataType] = useState(\"\");\r\n  let [newUserData, setNewUserData] = useState(\"\");\r\n  let [isTextError, setIsTextError] = useState(false);\r\n\r\n  const onChange = (dataToChange) => setDataType(dataToChange);\r\n\r\n  const resetSentData = () => {\r\n    setDataType(\"\");\r\n  };\r\n\r\n  const sendData = () => {\r\n    if (newUserData === \"\" || newUserData === null) return setIsTextError(true);\r\n    changeUserData(newUserData, dataType);\r\n    setNewUserData(\"\");\r\n    setDataType(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"change-profile-page-wrapper\">\r\n      {dataType === \"\" ? (\r\n        <form className=\"change-profile-section\">\r\n          <div className=\"input-wrapper\" onClick={() => onChange(\"userName\")}>\r\n            <p className=\"font__bold p__size font__p\">Change Username</p>\r\n          </div>\r\n\r\n          <div className=\"input-wrapper\" onClick={() => onChange(\"firstName\")}>\r\n            <p className=\"font__bold p__size font__p\">Change first name</p>\r\n          </div>\r\n\r\n          <div className=\"input-wrapper\" onClick={() => onChange(\"lastName\")}>\r\n            <p className=\"font__bold p__size font__p\">Change last name</p>\r\n          </div>\r\n        </form>\r\n      ) : (\r\n        <form className=\"change-profile-section\">\r\n          <p className=\"font__bold font__p p__size\">Add new {dataType}</p>\r\n          <input\r\n            onChange={(e) => {\r\n              setNewUserData(e.target.value);\r\n            }}\r\n            type=\"text\"\r\n            placeholder=\"Type something...\"\r\n            className=\"change-profile-input\"\r\n          />\r\n\r\n          {errors && isTextError && (\r\n            <ErrorMessage errorMessage=\"Something went wrong...\" />\r\n          )}\r\n\r\n          <div className=\"change-profile-buttons-wrapper\">\r\n            <div className=\"change-profile-btn\" onClick={() => sendData()}>\r\n              Submit\r\n            </div>\r\n\r\n            <div className=\"change-profile-btn\" onClick={() => resetSentData()}>\r\n              Go back\r\n            </div>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.posts,\r\n});\r\n\r\nexport default connect(mapStateToProps, { changeUserData })(ChangeProfile);","import {\r\n    CHANGE_PROFILE,\r\n    CHANGE_USER_DATA_FAILED,\r\n  } from \"../../constants/auth.constants\";\r\n  import axios from \"axios\";\r\n  \r\n  export const changeUserData = (changeUserData, userDataToChange) => async (\r\n    dispatch\r\n  ) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      const body = JSON.stringify({ changeUserData });\r\n      const response = await axios.put(\r\n        `http://localhost:8000/api/users/change_user_data/${userDataToChange}`,\r\n        body,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: CHANGE_PROFILE,\r\n        payload: response.data,\r\n      });\r\n      alert(\"Data has changed\");\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CHANGE_USER_DATA_FAILED,\r\n        payload: error,\r\n      });\r\n    }\r\n  };","export const GET_USERS = \"GET_USERS\";\r\nexport const GET_USER = \"GET_USER\";\r\nexport const SEARCH_USERS = \"SEARCH_USERS\";\r\nexport const USER_ERROR = \"USER_ERROR\";\r\nexport const GET_POST_BY_USER_ID = \"GET_POST_BY_USER_ID\";\r\nexport const GET_USER_POSTS = \"GET_USER_POSTS\";\r\nexport const GET_USER_BY_ID = \"GET_USER_BY_ID\";\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <Loader\r\n      type=\"Bars\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Spinner;","export const MAKE_POST = \"MAKE_POST\";\r\nexport const POST_ERROR = \"POST_ERROR\";\r\nexport const GET_USER_POSTS = \"GET_USER_POSTS\";\r\nexport const REMOVE_POST = \"REMOVE_POST\";\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const GET_POST = \"GET_POST\";\r\nexport const CLEAR_POSTS = \"CLEAR_POSTS\";\r\nexport const SEARCH_TOPICS = \"SEARCH_TOPICS\";\r\nexport const MOST_LIKED_POSTS = \"MOST_LIKED_POSTS\";\r\nexport const MOST_COMMENTED = \"MOST_COMMENTED\";\r\nexport const ADD_LIKE = \"ADD_LIKE\";\r\nexport const THE_MOST_RECENT_POSTS = \"THE_MOST_RECENT_POSTS\";\r\nexport const REMOVE_LIKE = \"REMOVE_LIKE\";\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const GET_POST_BY_USER_ID = \"GET_POST_BY_USER_ID\";\r\nexport const LIKE_COMMENT = \"LIKE_COMMENT\";\r\nexport const REMOVE_LIKE_FROM_COMMENT = \"REMOVE_LIKE_FROM_COMMENT\";\r\nexport const CLEAR_POST = \"CLEAR_POST\";\r\nexport const REMOVE_COMMENT = \"REMOVE_COMMENT\";","import axios from \"axios\";\r\nimport { GET_USER_POSTS, USER_ERROR} from \"../../constants/users.constants\";\r\n\r\nexport const getUserPosts = () => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`http://localhost:8000/api/posts/user_posts`);\r\n        dispatch({ type: GET_USER_POSTS, payload: res.data});\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_ERROR,\r\n            payload: error,\r\n        });\r\n    }\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { removePost } from \"../../actions/posts.actions/posts.actions/removePost\";\r\nimport Spinner from \"../../Spinner\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst UserPost = ({ post, removePost, auth }) => {\r\n  console.log(post);\r\n  return post === null || !post ? (\r\n    <div className=\"all-page-wrapper flex__center\">\r\n      <Spinner />\r\n    </div>\r\n  ) : (\r\n    <div className=\"user-post\">\r\n      <div className=\"user-post-date\">\r\n        <Moment format=\"HH:mm YYYY-MM-DD\">{post.date}</Moment>\r\n      </div>\r\n\r\n      <div className=\"user-post-topic\">\r\n        <p className=\"font__p font__bold\">{post.postText}</p>\r\n      </div>\r\n\r\n      <div className=\"post__likes__comments__deleteBtn-wrapper\">\r\n        <div className=\"post__likes__comments__deleteBtn\">\r\n          <div className=\"user-post-likes\">\r\n            <i className=\"far fa-thumbs-up\"></i> {post.likes.length}\r\n          </div>\r\n          <div className=\"user-post-comments\">\r\n            <i className=\"far fa-comment\"></i>\r\n            {post.comments.length}\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: post.user === auth.user._id ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"removePostBtn app_color_background\"\r\n              onClick={() => removePost(post._id)}\r\n            >\r\n              <i className=\"fas fa-times\"></i>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"link-to-post-page-button app_color_background font__p font__bold p__size\">\r\n            <Link to={`/topics/topic/${post._id}`}>View More</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  removePost,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPost);","import { REMOVE_POST, POST_ERROR } from \"../../../constants/posts.constants\";\r\nimport { getUserPosts } from \"../../users.actions/getUserPosts.js\";\r\nimport axios from \"axios\";\r\n\r\nexport const removePost = (post_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(\r\n      `http://localhost:8000/api/posts/delete_post/${post_id}`\r\n    );\r\n    dispatch({ type: REMOVE_POST, payload: res.data });\r\n    dispatch(getUserPosts());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport UserPost from \"./UserPost\";\r\n\r\nconst UserPostsWrapper = ({ posts }) =>\r\n  posts !== null &&\r\n  posts.length > 0 &&\r\n  posts.map((post) => <UserPost post={post} key={post._id} />);\r\n\r\nexport default UserPostsWrapper;\r\n","import React from \"react\";\r\n\r\nconst UserProfileData = ({ userProfile }) => {\r\n  return (\r\n    <div className=\"data-items\">\r\n      <div className=\"font__p data-item\">\r\n        <p style={{ marginRight: \".4em\" }} className=\"font__bold\">\r\n          first Name:\r\n        </p>\r\n        {userProfile.firstName}\r\n      </div>\r\n\r\n      <div className=\"font__p data-item\">\r\n        <p style={{ marginRight: \".4em\" }} className=\"font__bold\">\r\n          Last Name:\r\n        </p>{\" \"}\r\n        {userProfile.lastName}\r\n      </div>\r\n\r\n      <div className=\"font__p data-item\">\r\n        <p style={{ marginRight: \".4em\" }} className=\"font__bold\">\r\n          Username:\r\n        </p>{\" \"}\r\n        {userProfile.userName}\r\n      </div>\r\n\r\n      <div className=\"font__p data-item\">\r\n        <p style={{ marginRight: \".4em\" }} className=\"font__bold\">\r\n          E-mail:\r\n        </p>{\" \"}\r\n        {userProfile.email}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfileData;","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserById } from \"../actions/users.actions/getUserById\";\r\nimport { getUserPostsById } from \"../actions/users.actions/getUserPostById\";\r\nimport Spinner from \"../Spinner\";\r\nimport UserPostsWrapper from \"./UserPosts/UserPostsWrapper\";\r\nimport UserProfileData from \"../components/userProfile/UserProfileData\";\r\n\r\nconst UserProfile = ({\r\n  users,\r\n  userProfile,\r\n  posts: { post },\r\n  match,\r\n  getUserById,\r\n  getUserPostsById,\r\n}) => {\r\n  useEffect(() => {\r\n    getUserById(match.params.user_id);\r\n    getUserPostsById(match.params.user_id);\r\n  }, []);\r\n\r\n  return users.profilePosts === [] ||\r\n    userProfile === null ||\r\n    post === users.profilePosts ? (\r\n    <div className=\"all-page-wrapper flex__center\">\r\n      <Spinner />\r\n    </div>\r\n  ) : (\r\n    <div className=\"account-page-wrapper\">\r\n      <div className=\"data\">\r\n        <img src={userProfile.avatar} alt=\"\" />\r\n\r\n        <UserProfileData userProfile={userProfile} />\r\n        <div className=\"user-posts\">\r\n          <header className=\"user-posts-header-wrapper app_color_background\">\r\n            {post !== null || post !== [] ? (\r\n              <p className=\"user-posts-header font__p font__bold\">\r\n                His/Her posts\r\n              </p>\r\n            ) : (\r\n              <p className=\"user-posts-header font__p font__bold\">\r\n                He/She hasn't added post\r\n              </p>\r\n            )}\r\n          </header>\r\n          <UserPostsWrapper posts={users.profilePosts} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.users,\r\n  userProfile: state.users.userProfile,\r\n  posts: state.posts,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserById, getUserPostsById })(\r\n  UserProfile\r\n);\r\n","import axios from \"axios\";\r\nimport { GET_USER_BY_ID, USER_ERROR} from \"../../constants/users.constants\";\r\n\r\nexport const getUserById = (user_id) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`http://localhost:8000/api/users/user_by_id/${user_id}`);\r\n        dispatch({ type: GET_USER_BY_ID, payload: res.data});\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_ERROR,\r\n            payload: error,\r\n        });\r\n    }\r\n}\r\n","import axios from \"axios\";\r\nimport { GET_POST_BY_USER_ID, USER_ERROR} from \"../../constants/users.constants\";\r\n\r\nexport const getUserPostsById= (user_id) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`http://localhost:8000/api/posts/user_posts/${user_id}`);\r\n        dispatch({ type: GET_POST_BY_USER_ID, payload: res.data});\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_ERROR,\r\n            payload: error,\r\n        });\r\n    }\r\n}","import { CLEAR_POST, POST_ERROR } from \"../../../constants/posts.constants\";\r\n\r\nexport const clearPost = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CLEAR_POST });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};","import { GET_POST, POST_ERROR } from \"../../../constants/posts.constants\";\r\nimport axios from \"axios\";\r\n\r\nexport const getPost = (post_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `http://localhost:8000/api/posts/${post_id}`\r\n    );\r\n    dispatch({ type: GET_POST, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};","import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeLikeFromComment } from \"../../actions/posts.actions/likes.actions/removeLikeFromComment\";\r\nimport { addLikeToComment } from \"../../actions/posts.actions/likes.actions/addLikeToComment\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst Comment = ({\r\n  comment,\r\n  auth,\r\n  post,\r\n  removeLikeFromComment,\r\n  addLikeToComment,\r\n}) => {\r\n  return post === null || post === [] ? (\r\n    <div className=\"all-page-wrapper flex__center\">\r\n      <Spinner />\r\n    </div>\r\n  ) : (\r\n    <div className=\"topic-wrapper\" key={comment._id}>\r\n      <div className=\"topic-date\">\r\n        <Moment format=\"HH:mm YYYY-MM-DD\">{comment.date}</Moment>\r\n      </div>\r\n\r\n      <div className=\"topic-user\">\r\n        <img src={comment.avatar} className=\"topic-avatar\" alt=\"\" />\r\n        <p className=\"font__p p__size\">{comment.userName}</p>\r\n      </div>\r\n\r\n      <div className=\"topic-section\">\r\n        <p>{comment.commentText}</p>\r\n        <div className=\"topic-section-links\">\r\n          <div\r\n            className=\"like-section\"\r\n            style={{ color: \"rgb(42, 9, 9)\" }}\r\n            onClick={() => {\r\n              if (comment.likes.find((like) => like.user === auth.user._id)) {\r\n                comment.likes.find((like) =>\r\n                  removeLikeFromComment(post._id, comment._id, like._id)\r\n                );\r\n              } else {\r\n                addLikeToComment(post._id, comment._id);\r\n              }\r\n            }}\r\n          >\r\n            <div className=\"font__p font__bold p__size like-item\">\r\n              <i\r\n                className={\r\n                  comment.likes.find((like) => like.user === auth.user._id)\r\n                    ? \"fas fa-thumbs-up\"\r\n                    : \"far fa-thumbs-up\"\r\n                }\r\n              ></i>\r\n            </div>\r\n\r\n            <div className=\"font__p font__bold p__size likes-length-item\">\r\n              <p>{comment.likes.length}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  post: state.posts.post,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  removeLikeFromComment,\r\n  addLikeToComment,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);\r\n","import axios from \"axios\";\r\nimport {\r\n  REMOVE_LIKE_FROM_COMMENT,\r\n  POST_ERROR,\r\n} from \"../../../constants/posts.constants\";\r\n\r\nexport const removeLikeFromComment = (post_id, comment_id, like_id) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const res = await axios.delete(\r\n      `http://localhost:8000/api/posts/remove_like_comment/${post_id}/${comment_id}/${like_id}`\r\n    );\r\n    dispatch({ type: REMOVE_LIKE_FROM_COMMENT, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};","import { getPost } from \"../posts.actions/getPost\";\r\nimport axios from \"axios\";\r\nimport { LIKE_COMMENT, POST_ERROR } from \"../../../constants/posts.constants\";\r\n\r\nexport const addLikeToComment = (post_id, comment_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(\r\n      `http://localhost:8000/api/posts/like_comment/${post_id}/${comment_id}`\r\n    );\r\n    dispatch({ type: LIKE_COMMENT, payload: res.data });\r\n    dispatch(getPost(post_id));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};","import React from \"react\";\r\nimport Comment from \"./Comment\";\r\n\r\nconst CommentsWrapper = ({ comments }) =>\r\n  comments !== null &&\r\n  comments !== [] &&\r\n  comments !== {} &&\r\n  comments.length > 0 &&\r\n  comments.map((comment) => <Comment comment={comment} key={comment._id} />);\r\n\r\nexport default CommentsWrapper;","import React from \"react\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst TopicSection = ({\r\n  auth,\r\n  post,\r\n  addLikeToTopicPage,\r\n  removeLikeFromPost,\r\n}) => {\r\n  return (\r\n    <div className=\"topic-wrapper\">\r\n      <div className=\"topic-date\">\r\n        <Moment format=\"HH:mm YYYY-MM-DD\">{post.date}</Moment>\r\n      </div>\r\n\r\n      <div className=\"topic-user\">\r\n        <img src={post.avatar} className=\"topic-avatar\" alt=\"\" />\r\n        <p className=\"font__p p__size\">{post.userName}</p>\r\n      </div>\r\n\r\n      <div className=\"topic-section\">\r\n        <p>{post.postText}</p>\r\n        <div className=\"topic-section-links\">\r\n          <div className=\"like-item\">\r\n            <p\r\n              className=\"font__p font__bold p__size hover\"\r\n              onClick={() => {\r\n                if (post.likes.find((like) => like.user === auth.user._id)) {\r\n                  post.likes.find((like) =>\r\n                    removeLikeFromPost(post._id, like._id)\r\n                  );\r\n                } else {\r\n                  addLikeToTopicPage(post._id);\r\n                }\r\n              }}\r\n            >\r\n              <i\r\n                className={\r\n                  post.likes.find((like) => like.user === auth.user._id)\r\n                    ? \"fas fa-thumbs-up\"\r\n                    : \"far fa-thumbs-up\"\r\n                }\r\n              ></i>\r\n              {post.likes.length}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopicSection;","import React, { useState } from \"react\";\r\n\r\nconst TopicPageForm = ({ auth, createComment, post }) => {\r\n  let [commentText, setCommentText] = useState(\"\");\r\n\r\n  const onChange = (e) => setCommentText(e.target.value);\r\n  return (\r\n    <form\r\n      className=\"search-topic-wrapper\"\r\n      style={{ display: auth.isLoggedIn ? \"block\" : \"none\" }}\r\n    >\r\n      <p\r\n        className=\"app_color_font font__bold font__p topics-headline\"\r\n        style={{ textAlign: \"center\" }}\r\n      >\r\n        Create Post\r\n      </p>\r\n\r\n      <textarea\r\n        value={commentText}\r\n        onChange={(e) => onChange(e)}\r\n        type=\"text\"\r\n      />\r\n\r\n      <div\r\n        className=\"topic-search-button app_color_background font__p font__bold\"\r\n        onClick={() => {\r\n          createComment(commentText, post._id);\r\n          setCommentText(\"\");\r\n        }}\r\n      >\r\n        Add comment\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TopicPageForm;","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearPost } from \"../actions/posts.actions/posts.actions/clearPost\";\r\nimport { getPost } from \"../actions/posts.actions/posts.actions/getPost\";\r\nimport { removeLikeFromPost } from \"../actions/posts.actions/likes.actions/removeLikeFromPost\";\r\nimport { addLikeToTopicPage } from \"../actions/posts.actions/likes.actions/addLikeToTopicPage\";\r\nimport { createComment } from \"../actions/posts.actions/comments.actions/createComment\";\r\nimport Spinner from \"../Spinner\";\r\nimport CommentsWrapper from \"./Comments/CommentsWrapper\";\r\nimport TopicSection from \"./TopicPosts/TopicSection\";\r\nimport TopicPageForm from \"./TopicPosts/TopicPageForm\";\r\n\r\nconst TopicPage = ({\r\n  clearPost,\r\n  getPost,\r\n  removeLikeFromPost,\r\n  addLikeToTopicPage,\r\n  createComment,\r\n  match,\r\n  auth,\r\n  post,\r\n}) => {\r\n  useEffect(() => {\r\n    clearPost();\r\n    getPost(match.params.topic_id);\r\n  }, []);\r\n\r\n  return post === null || post === [] ? (\r\n    <div className=\"all-page-wrapper flex__center\">\r\n      <Spinner />\r\n    </div>\r\n  ) : (\r\n    <div className=\"main-post-wrapper\">\r\n      <TopicSection\r\n        post={post}\r\n        auth={auth}\r\n        removeLikeFromPost={removeLikeFromPost}\r\n        addLikeToTopicPage={addLikeToTopicPage}\r\n      />\r\n\r\n      <div className=\"post-page-header\">\r\n        <TopicPageForm auth={auth} post={post} createComment={createComment} />\r\n      </div>\r\n\r\n      <div className=\"comments-align-left\">\r\n        <CommentsWrapper comments={post.comments} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  clearPost,\r\n  getPost,\r\n  removeLikeFromPost,\r\n  addLikeToTopicPage,\r\n  createComment,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.posts.post,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicPage);","import axios from \"axios\";\r\nimport { REMOVE_POST, POST_ERROR } from \"../../../constants/posts.constants\";\r\nimport { getPost } from \"../posts.actions/getPost\";\r\n\r\nexport const removeLikeFromPost = (post_id, like_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(\r\n      `http://localhost:8000/api/posts/remove_like/${post_id}/${like_id}`\r\n    );\r\n    dispatch({ type: REMOVE_POST, payload: res.data });\r\n    dispatch(getPost(post_id));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { ADD_LIKE, POST_ERROR } from \"../../../constants/posts.constants\";\r\nimport { getPost } from \"../posts.actions/getPost\";\r\n\r\nexport const addLikeToTopicPage = (post_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(\r\n      `http://localhost:8000/api/posts/likes/${post_id}`\r\n    );\r\n    dispatch({ type: ADD_LIKE, payload: res.data });\r\n    dispatch(getPost(post_id));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};","import { ADD_COMMENT, POST_ERROR } from \"../../../constants/posts.constants\";\r\nimport axios from \"axios\";\r\nimport { getPost } from \"../posts.actions/getPost\";\r\n\r\nexport const createComment = (commentText , post_id) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const body = JSON.stringify({ commentText });\r\n    const res = await axios.put(\r\n      `http://localhost:8000/api/posts/add_comment/${post_id}`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: ADD_COMMENT, payload: res.data });\r\n    dispatch(getPost(post_id));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};","import axios from \"axios\";\r\nimport { GET_POSTS, POST_ERROR } from \"../../../constants/posts.constants\";\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"http://localhost:8000/api/posts\");\r\n    dispatch({ type: GET_POSTS, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};","import {\r\n    THE_MOST_RECENT_POSTS,\r\n    POST_ERROR,\r\n  } from \"../../../constants/posts.constants\";\r\n  import axios from \"axios\";\r\n  \r\n  export const getMostRecentPosts = () => async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"http://localhost:8000/api/posts/most_recent\"\r\n      );\r\n      dispatch({ type: THE_MOST_RECENT_POSTS, payload: res.data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: error,\r\n      });\r\n    }\r\n  };","import { MOST_COMMENTED, POST_ERROR } from \"../../../constants/posts.constants\";\r\nimport axios from \"axios\";\r\n\r\nexport const getMostCommentedPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      \"http://localhost:8000/api/posts/most_comments\"\r\n    );\r\n    dispatch({ type: MOST_COMMENTED, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};","import {\r\n    MOST_LIKED_POSTS,\r\n    POST_ERROR,\r\n  } from \"../../../constants/posts.constants\";\r\n  import axios from \"axios\";\r\n  \r\n  export const getMostLikedPosts = () => async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"http://localhost:8000/api/posts/most_liked\"\r\n      );\r\n      dispatch({ type: MOST_LIKED_POSTS, payload: res.data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: error,\r\n      });\r\n    }\r\n  };","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { addLikeToPost } from \"../../actions/posts.actions/likes.actions/addLikeToPost\";\r\nimport { removeLikeFromTopicPost } from \"../../actions/posts.actions/likes.actions/removeLikeFromTopicPost\";\r\n\r\nconst TopicPost = ({\r\n  isTheOldest,\r\n  isTheMostCommented,\r\n  isTheMostRecent,\r\n  isTheMostLiked,\r\n  post,\r\n  removeLikeFromTopicPost,\r\n  addLikeToPost,\r\n  auth,\r\n}) => {\r\n  return (\r\n    <div className=\"topic-wrapper\">\r\n      <div className=\"topic-date\">\r\n        <Moment format=\"HH:mm YYYY-MM-DD\">{post.date}</Moment>\r\n      </div>\r\n\r\n      <div className=\"topic-user\">\r\n        <img src={post.avatar} className=\"topic-avatar\" alt=\"\" />\r\n        <p className=\"font__p p__size\">{post.firstName}</p>\r\n      </div>\r\n\r\n      <div className=\"topic-section\">\r\n        <p>{post.postText}</p>\r\n        <div className=\"topic-section-links\">\r\n          <div className=\"like-section\" style={{ color: \"rgb(42, 9, 9)\" }}>\r\n            <div\r\n              className=\"font__p font__bold p__size like-item\"\r\n              onClick={() => {\r\n                if (post.likes.find((like) => like.user === auth.user._id)) {\r\n                  post.likes.find((like) =>\r\n                    removeLikeFromTopicPost(\r\n                      post._id,\r\n                      like._id,\r\n                      isTheOldest,\r\n                      isTheMostRecent,\r\n                      isTheMostCommented,\r\n                      isTheMostLiked\r\n                    )\r\n                  );\r\n                } else {\r\n                  addLikeToPost(\r\n                    post._id,\r\n                    isTheOldest,\r\n                    isTheMostRecent,\r\n                    isTheMostCommented,\r\n                    isTheMostLiked\r\n                  );\r\n                }\r\n              }}\r\n            >\r\n              <i\r\n                className={\r\n                  post.likes.find((like) => like.user === auth.user._id)\r\n                    ? \"fas fa-thumbs-up\"\r\n                    : \"far fa-thumbs-up\"\r\n                }\r\n              ></i>\r\n            </div>\r\n\r\n            <div className=\"font__p font__bold p__size likes-length-item\">\r\n              {post.likes.length}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"topic-comment-section font__p font__bold p__size\">\r\n            <i className=\"far fa-comment\"></i>\r\n            {post.comments.length}\r\n          </div>\r\n\r\n          <div className=\"link-to-post-page-button app_color_background font__p font__bold p__size\">\r\n            <Link to={`/topics/topic/${post._id}`}>View more</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addLikeToPost,\r\n  removeLikeFromTopicPost,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicPost);","import axios from \"axios\";\r\nimport { ADD_LIKE, POST_ERROR } from \"../../../constants/posts.constants\";\r\nimport { getPosts } from \"../posts.actions/getPosts\";\r\nimport { getMostRecentPosts } from \"../posts.actions/getMostRecentPosts\";\r\nimport { getMostCommentedPosts } from \"../posts.actions/getMostCommentedPosts\";\r\nimport { getMostLikedPosts } from \"../posts.actions/getMostLikedPosts\";\r\n\r\nexport const addLikeToPost = (\r\n  post_id,\r\n  isOldest,\r\n  isMostRecent,\r\n  isMostCommented,\r\n  isMostLiked\r\n) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(\r\n      `http://localhost:8000/api/posts/likes/${post_id}`\r\n    );\r\n    dispatch({ type: ADD_LIKE, payload: res.data });\r\n\r\n    if (isOldest) {\r\n      dispatch(getPosts());\r\n    } else if (isMostRecent) {\r\n      dispatch(getMostRecentPosts());\r\n    } else if (isMostCommented) {\r\n      dispatch(getMostCommentedPosts());\r\n    } else if (isMostLiked) {\r\n      dispatch(getMostLikedPosts());\r\n    }\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};","import axios from \"axios\";\r\nimport { REMOVE_LIKE, POST_ERROR } from \"../../../constants/posts.constants\";\r\nimport { getPosts } from \"../posts.actions/getPosts\";\r\nimport { getMostRecentPosts } from \"../posts.actions/getMostRecentPosts\";\r\nimport { getMostCommentedPosts } from \"../posts.actions/getMostCommentedPosts\";\r\nimport { getMostLikedPosts } from \"../posts.actions/getMostLikedPosts\";\r\n\r\nexport const removeLikeFromTopicPost = (\r\n  post_id,\r\n  like_id,\r\n  isOldest,\r\n  isMostRecent,\r\n  isMostCommented,\r\n  isMostLiked\r\n) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(\r\n      `http://localhost:8000/api/posts/remove_like/${post_id}/${like_id}`\r\n    );\r\n    dispatch({\r\n      type: REMOVE_LIKE,\r\n      payload: res.data,\r\n    });\r\n    if (isOldest) {\r\n      dispatch(getPosts());\r\n    } else if (isMostRecent) {\r\n      dispatch(getMostRecentPosts());\r\n    } else if (isMostCommented) {\r\n      dispatch(getMostCommentedPosts());\r\n    } else if (isMostLiked) {\r\n      dispatch(getMostLikedPosts());\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: POST_ERROR });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport TopicPost from \"./TopicPost\";\r\n\r\nconst TopicPostsWrapper = ({\r\n  isTheOldest,\r\n  isTheMostCommented,\r\n  isTheMostRecent,\r\n  isTheMostLiked,\r\n  posts,\r\n}) =>\r\n  posts !== null &&\r\n  posts.length > 0 &&\r\n  posts.map((post) => (\r\n    <TopicPost\r\n      isTheOldest={isTheOldest}\r\n      isTheMostCommented={isTheMostCommented}\r\n      isTheMostRecent={isTheMostRecent}\r\n      isTheMostLiked={isTheMostLiked}\r\n      post={post}\r\n      key={post._id}\r\n    />\r\n  ));\r\n\r\nexport default TopicPostsWrapper;","import React, { useState, useEffect } from \"react\";\r\nimport { getPosts } from \"../actions/posts.actions/posts.actions/getPosts\";\r\nimport { getMostRecentPosts } from \"../actions/posts.actions/posts.actions/getMostRecentPosts\";\r\nimport { getMostCommentedPosts } from \"../actions/posts.actions/posts.actions/getMostCommentedPosts\";\r\nimport { getMostLikedPosts } from \"../actions/posts.actions/posts.actions/getMostLikedPosts\";\r\nimport { searchTopics } from \"../actions/posts.actions/searchTopics\";\r\nimport { connect } from \"react-redux\";\r\nimport TopicPostsWrapper from \"./TopicPosts/TopicPostsWrapper\";\r\n\r\nconst Topics = ({\r\n    getPosts,\r\n    getMostRecentPosts,\r\n    getMostCommentedPosts,\r\n    getMostLikedPosts,\r\n    searchTopics,\r\n    posts,\r\n}) => {\r\n    let [dataFromSearch, setDataFromSearch] = useState(\"\");\r\n    let [topicsSortType, setTopicsSortType] = useState({\r\n    isTheOldest: false,\r\n    isTheMostRecent: true,\r\n    isTheMostCommented: false,\r\n    isTheMostLiked: false,\r\n  });\r\n\r\n  let {\r\n    isTheMostCommented,\r\n    isTheOldest,\r\n    isTheMostLiked,\r\n    isTheMostRecent,\r\n  } = topicsSortType;\r\n\r\n  useEffect(() => {\r\n    if (isTheOldest) getPosts();\r\n    else if (isTheMostCommented) getMostCommentedPosts();\r\n    else if (isTheMostLiked) getMostLikedPosts();\r\n    else getMostRecentPosts();\r\n  }, []);\r\n\r\n  const onChange = (e) => setDataFromSearch(e.target.value);\r\n\r\n  const searchForTopic = () => {\r\n    if (dataFromSearch !== \"\" || dataFromSearch !== null) {\r\n      return searchTopics(dataFromSearch);\r\n    } else {\r\n      setTopicsSortType({\r\n        isTheMostRecent: true,\r\n        isTheMostCommented: false,\r\n        isTheMostLiked: false,\r\n        isTheOldest: false,\r\n      });\r\n      getMostRecentPosts();\r\n    }\r\n  };\r\n\r\n  const changeTopicsType = (changedType) => {\r\n    if (changedType === \"isTheMostLiked\") {\r\n      setTopicsSortType({\r\n        isTheMostLiked: true,\r\n        isTheOldest: false,\r\n        isTheMostCommented: false,\r\n        isTheMostRecent: false,\r\n      });\r\n      getMostLikedPosts();\r\n    } else if (changedType === \"isTheOldest\") {\r\n      setTopicsSortType({\r\n        isTheMostLiked: false,\r\n        isTheOldest: true,\r\n        isTheMostCommented: false,\r\n        isTheMostRecent: false,\r\n      });\r\n      getPosts();\r\n    } else if (changedType === \"isTheMostCommented\") {\r\n      setTopicsSortType({\r\n        isTheMostLiked: false,\r\n        isTheOldest: false,\r\n        isTheMostCommented: true,\r\n        isTheMostRecent: false,\r\n      });\r\n      getMostCommentedPosts();\r\n    } else {\r\n      setTopicsSortType({\r\n        isTheMostLiked: false,\r\n        isTheOldest: false,\r\n        isTheMostCommented: false,\r\n        isTheMostRecent: true,\r\n      });\r\n      getMostRecentPosts();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"topics-header\">\r\n        <p className=\"app_color_font font__bold font__p topics-headline\">\r\n          Topics\r\n        </p>\r\n        <br />\r\n\r\n        <div\r\n          className={\r\n            isTheOldest\r\n              ? \"header-checkbox app_color_font p__size font__p font__bold\"\r\n              : \"header-checkbox app_color_font p__size font__p\"\r\n          }\r\n        >\r\n          <input\r\n            type=\"checkbox\"\r\n            value={isTheOldest}\r\n            checked={isTheOldest}\r\n            onChange={() => changeTopicsType(\"isTheOldest\")}\r\n          />\r\n          <p onClick={() => changeTopicsType(\"isTheOldest\")}>The Oldest</p>\r\n        </div>\r\n\r\n        <div\r\n          className={\r\n            isTheMostRecent\r\n              ? \"header-checkbox app_color_font p__size font__p font__bold\"\r\n              : \"header-checkbox app_color_font p__size font__p\"\r\n          }\r\n        >\r\n          <input\r\n            onChange={() => changeTopicsType(\"isTheMostRecent\")}\r\n            value={isTheMostRecent}\r\n            checked={isTheMostRecent}\r\n            type=\"checkbox\"\r\n          />\r\n          <p onClick={() => changeTopicsType(\"isTheMostRecent\")}>\r\n            The most recent\r\n          </p>\r\n        </div>\r\n\r\n        <div\r\n          className={\r\n            isTheMostLiked\r\n              ? \"header-checkbox app_color_font p__size font__p font__bold\"\r\n              : \"header-checkbox app_color_font p__size font__p\"\r\n          }\r\n        >\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isTheMostLiked}\r\n            value={isTheMostLiked}\r\n            onChange={() => changeTopicsType(\"isTheMostLiked\")}\r\n          />\r\n          <p onClick={() => changeTopicsType(\"isTheMostLiked\")}>\r\n            The Most Liked\r\n          </p>\r\n        </div>\r\n\r\n        <div\r\n          className={\r\n            isTheMostCommented\r\n              ? \"header-checkbox app_color_font p__size font__p font__bold\"\r\n              : \"header-checkbox app_color_font p__size font__p\"\r\n          }\r\n        >\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isTheMostCommented}\r\n            value={isTheMostCommented}\r\n            onChange={() => changeTopicsType(\"isTheMostCommented\")}\r\n          />\r\n          <p onClick={() => changeTopicsType(\"isTheMostCommented\")}>\r\n            The Most Commented\r\n          </p>\r\n        </div>\r\n\r\n        <form className=\"search-topic-wrapper\">\r\n          <textarea\r\n            type=\"text\"\r\n            value={dataFromSearch}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n\r\n          <div\r\n            className=\"topic-search-button app_color_background font__p font__bold\"\r\n            onClick={() => searchForTopic()}\r\n          >\r\n            Search for topic\r\n          </div>\r\n        </form>\r\n      </header>\r\n\r\n      <div className=\"topics-wrapper\">\r\n        <TopicPostsWrapper\r\n          isTheOldest={isTheOldest}\r\n          isTheMostCommented={isTheMostCommented}\r\n          isTheMostRecent={isTheMostRecent}\r\n          isTheMostLiked={isTheMostLiked}\r\n          posts={posts.posts}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.posts,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getPosts,\r\n  getMostRecentPosts,\r\n  getMostCommentedPosts,\r\n  getMostLikedPosts,\r\n  searchTopics,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Topics);","import { SEARCH_TOPICS, POST_ERROR } from \"../../constants/posts.constants\";\r\nimport axios from \"axios\";\r\n\r\nexport const searchTopics = (searchPost) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const body = JSON.stringify({ searchPost});\r\n    const res = await axios.put(\r\n      `http://localhost:8000/api/posts/search_for_post`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: SEARCH_TOPICS, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};","import axios from \"axios\";\r\nimport { GET_USERS, USER_ERROR} from \"../../constants/users.constants\";\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`http://localhost:8000/api/users/users`);\r\n        dispatch({ type: GET_USERS, payload: res.data});\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_ERROR,\r\n            payload: error,\r\n        });\r\n    }\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst User = ({ user }) => {\r\n  return (\r\n    <div className=\"topic-wrapper\">\r\n      <div className=\"topic-user\">\r\n        <img src={user.avatar} className=\"topic-avatar\" alt=\"\" />\r\n        <p className=\"font__p p__size\">{user.userName}</p>\r\n      </div>\r\n\r\n      <div className=\"topic-section\">\r\n        <div className=\"topic-section-links\">\r\n          <div className=\"link-to-post-page-button app_color_background font__p font__bold p__size\">\r\n            <Link to={`users/user/${user._id}`}>View Profile</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;","import React from \"react\";\r\nimport User from \"./User\";\r\n\r\nconst UsersWrapper = ({ users }) =>\r\n  users !== null &&\r\n  users !== [] &&\r\n  users !== {} &&\r\n  users.length > 0 &&\r\n  users.map((user) => <User user={user} key={user._id} />);\r\n\r\nexport default UsersWrapper;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUsers } from \"../../actions/users.actions/getUsers\";\r\nimport { searchByUsername } from \"../../actions/users.actions/searchByUsername\";\r\n\r\nconst SearchUser = ({getUsers, searchByUsername}) => {\r\n  let [searchedUsername, setSearchedUsername] = useState(\"\");\r\n\r\n  const onChange = (e) => setSearchedUsername(e.target.value);\r\n\r\n  const searchForUser = () => {\r\n    if (searchedUsername !== \"\" || searchedUsername !== null){\r\n      return searchByUsername(searchedUsername);\r\n    }\r\n    else getUsers(); \r\n  };\r\n  return (\r\n    <header className=\"users-header\">\r\n      <p className=\"app_color_font font__bold font__p users-headline\">Users</p>\r\n      <br />\r\n\r\n      <form className=\"search-user-wrapper\">\r\n        <textarea\r\n          type=\"submit\"\r\n          onChange={(e) => onChange(e)}\r\n          value={searchedUsername}\r\n        />\r\n\r\n        <div\r\n          className=\"user-search-button app_color_background font__p font__bold\"\r\n          onClick={() => searchForUser()}\r\n        >\r\n          Search for user\r\n        </div>\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default connect(null, { searchByUsername, getUsers})(SearchUser);\r\n","import axios from \"axios\";\r\nimport { USER_ERROR} from \"../../constants/users.constants\";\r\nimport { SEARCH_BY_USERNAME } from \"../../constants/auth.constants\";\r\n\r\nexport const searchByUsername = (searchValue ) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n        const body = JSON.stringify({ searchValue });\r\n        const res = await axios.put(`http://localhost:8000/api/users/search_by_username`,\r\n        body,\r\n        config\r\n        );\r\n        dispatch({ type:SEARCH_BY_USERNAME, \r\n                    payload: res.data});\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_ERROR,\r\n            payload: error,\r\n        });\r\n    }\r\n}","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUsers } from \"../actions/users.actions/getUsers\";\r\nimport UsersWrapper from \"./Users/UsersWrapper\";\r\nimport SearchUser from \"./Users/SearchUser\";\r\n\r\nconst Users = ({ getUsers, auth }) => {\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <SearchUser />\r\n      <div className=\"users-wrapper\">\r\n        <UsersWrapper users={auth.users} key={auth._id} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUsers })(Users);\r\n","import React, { useState } from \"react\";\r\n\r\nconst CreatePost = ({ createPost }) => {\r\n  let [postText, setpostText] = useState(\"\");\r\n\r\n  const onChange = (e) => setpostText(e.target.value);\r\n\r\n  const submitData = () => {\r\n    if (postText !== \"\" && postText !== null) {\r\n      createPost(postText);\r\n    } else {\r\n      alert(\"Text is empty!\");\r\n    }\r\n    setpostText(\"\");\r\n  };\r\n  return (\r\n    <div className=\"tips-wrapper\">\r\n      <p className=\"font__p p__size font__bold app_color_font\">\r\n        <i className=\"fas fa-check-circle small_margin_right\"></i>\r\n        Tips on getting good answers quickly\r\n      </p>\r\n      <br />\r\n\r\n      <ul className=\"tips\">\r\n        <li className=\"tip-item\">\r\n          <p className=\"font__p\">\r\n            <i className=\"fas fa-check small_margin_right\"></i>\r\n            Make sure your question hasn't been asked already\r\n          </p>\r\n        </li>\r\n\r\n        <li className=\"tip-item\">\r\n          <p className=\"font__p\">\r\n            <i className=\"fas fa-check small_margin_right\"></i>\r\n            Keep your question short and to the point\r\n          </p>\r\n        </li>\r\n\r\n        <li className=\"tip-item\">\r\n          <p className=\"font__p\">\r\n            <i className=\"fas fa-check small_margin_right\"></i>\r\n            Double-check grammar and spelling\r\n          </p>\r\n        </li>\r\n\r\n        <li className=\"tip-item\">\r\n          <p className=\"font__p\">\r\n            <i className=\"fas fa-check small_margin_right\"></i>\r\n            Start Your question with \"What\",\"How\",\"Why\",etc.\r\n          </p>\r\n        </li>\r\n      </ul>\r\n\r\n      <form>\r\n        <textarea\r\n          type=\"text\"\r\n          value={postText}\r\n          onChange={(e) => onChange(e)}\r\n        />\r\n        <div\r\n          onClick={() => submitData()}\r\n          className=\"app_color_background add-post-button font__p font__bold\"\r\n        >\r\n          Add post\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Output = ({ clearPost }) => {\r\n  return (\r\n    <div className=\"output\">\r\n      <div className=\"output-header\">\r\n        <p className=\"font__bold font__p app_color_font\">POST ADDED</p>\r\n      </div>\r\n      <div className=\"output-buttons-wrapper\">\r\n        <div className=\"output-buttons\">\r\n          <div\r\n            onClick={() => clearPost()}\r\n            className=\"new-post output-button app_color_background\"\r\n          >\r\n            <p className=\"p__size font__p\">Add New Post</p>\r\n          </div>\r\n          <div className=\"view-comment output-button app_color_background\">\r\n            <Link\r\n              to=\"/topics\"\r\n              className=\"white__color__font\"\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <p className=\"p__size font__p\">View Posts</p>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Output;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createPost } from \"../actions/posts.actions/posts.actions/createPost\";\r\nimport { clearPost } from \"../actions/posts.actions/posts.actions/clearPost\";\r\nimport CreatePost from \"../components/AddPost/CreatePost\";\r\nimport Output from \"../components/AddPost/Output\";\r\n\r\nconst AddPost = ({ clearPost, createPost, posts: { post } }) => {\r\n  setTimeout(() => {\r\n    clearPost();\r\n  }, 5000);\r\n\r\n  return (\r\n    <div className=\"make-post-wrapper\">\r\n      {post === null ? (\r\n        <CreatePost createPost={createPost} />\r\n      ) : (\r\n        <Output clearPost={clearPost} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  posts: state.posts,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  createPost,\r\n  clearPost,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost);","import { MAKE_POST, POST_ERROR } from \"../../../constants/posts.constants\";\r\nimport axios from \"axios\";\r\n\r\nexport const createPost = (postText) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const body = JSON.stringify({ postText });\r\n    const res = await axios.post(\r\n      `http://localhost:8000/api/posts`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: MAKE_POST, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavbarLinks = ({ isLoggedIn, logOut }) => {\r\n  return (\r\n    <div className=\"nav-links\">\r\n      <Link to=\"/users\" className=\"href__style__remove nav__link\">\r\n        Users <i className=\"fas fa-users\"></i>\r\n      </Link>\r\n\r\n      <Link to=\"/topics\" className=\"href__style__remove nav__link\">\r\n        Topics <i className=\"fas fa-comments\"></i>\r\n      </Link>\r\n\r\n      <Link\r\n        to=\"/login\"\r\n        className=\"href__style__remove nav__link\"\r\n        style={{ display: isLoggedIn ? \"none\" : \"flex\" }}\r\n      >\r\n        Log In\r\n      </Link>\r\n\r\n      <Link\r\n        to=\"/register\"\r\n        className=\"href__style__remove nav__link\"\r\n        style={{ display: isLoggedIn ? \"none\" : \"flex\" }}\r\n      >\r\n        Sign Up\r\n      </Link>\r\n\r\n      {/* <Link\r\n        to=\"/account\"\r\n        className=\"href__style__remove nav__link\"\r\n        style={{ display: isLoggedIn ? \"flex\" : \"none\" }}\r\n      >\r\n        Account <i className=\"fas fa-address-card\"></i>\r\n      </Link> */}\r\n\r\n      <Link\r\n        to=\"/account\"\r\n        className=\"href__style__remove nav__link\"\r\n        style={{ display: isLoggedIn ? \"flex\" : \"none\" }}\r\n      >\r\n        Account <i className=\"fas fa-address-card\"></i>\r\n      </Link>\r\n\r\n      <Link\r\n        to=\"/add-post\"\r\n        className=\"href__style__remove nav__link\"\r\n        style={{ display: isLoggedIn ? \"flex\" : \"none\" }}\r\n      >\r\n        Add question <i className=\"fas fa-edit\"></i>\r\n      </Link>\r\n\r\n      <Link\r\n        to=\"/login\"\r\n        className=\"href__style__remove nav__link\"\r\n        onClick={() => logOut()}\r\n        style={{ display: isLoggedIn ? \"flex\" : \"none\" }}\r\n      >\r\n        Log Out <i className=\"fas fa-sign-out-alt\"></i>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavbarLinks;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport comment3 from \"../../comment3.jpg\";\r\nconst NavbarLogo = () => {\r\n  return (\r\n    <div className=\"logo-wrapper\">\r\n      <Link to=\"/\">\r\n        <img className=\"image2\" src={comment3} alt=\"logo\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavbarLogo;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logOut } from \"../actions/auth.actions/logOut\";\r\nimport NavbarLinks from \"./navbar/NavbarLinks\";\r\nimport NavbarLogo from \"./navbar/NavbarLogo\";\r\n\r\nconst Navbar = ({ logOut, auth: { isLoggedIn } }) => {\r\n  let [isSidebar, setSidebar] = useState(false);\r\n  return (\r\n    <nav className=\"main__nav\">\r\n      <NavbarLogo />\r\n\r\n      <NavbarLinks logOut={logOut} isLoggedIn={isLoggedIn} />\r\n\r\n      <div className=\"hamburger-wrapper\">\r\n        <i\r\n          className=\"fas fa-bars hamburger-bar\"\r\n          onClick={() => setSidebar(true)}\r\n        ></i>\r\n      </div>\r\n\r\n      <div\r\n        className=\"sidebar-wrapper\"\r\n        style={{\r\n          transition: \"width .4s ease-in-out\",\r\n          width: isSidebar ? \"103vw\" : \"0vw\",\r\n          zIndex: isSidebar ? \"3\" : \"1\",\r\n        }}\r\n      >\r\n        <div className=\"close-sidebar-wrapper\">\r\n          <i\r\n            onClick={() => setSidebar(false)}\r\n            className=\"fas fa-times close-sidebar-icon\"\r\n          ></i>\r\n        </div>\r\n        <div className=\"sidebar-links\">\r\n          <Link\r\n            className=\"sidebar-link\"\r\n            style={{ display: isSidebar ? \"block\" : \"none\" }}\r\n            to=\"/users\"\r\n            onClick={() => setSidebar(false)}\r\n          >\r\n            Users\r\n          </Link>\r\n\r\n          <Link\r\n            className=\"sidebar-link\"\r\n            to=\"/topics\"\r\n            style={{ display: isSidebar ? \"block\" : \"none\" }}\r\n            onClick={() => setSidebar(false)}\r\n          >\r\n            Topics\r\n          </Link>\r\n\r\n          <Link\r\n            className=\"sidebar-link\"\r\n            to=\"/add-post\"\r\n            style={{ display: isSidebar && isLoggedIn ? \"block\" : \"none\" }}\r\n            onClick={() => setSidebar(false)}\r\n          >\r\n            Add question\r\n          </Link>\r\n\r\n          {/* <Link\r\n            className=\"sidebar-link\"\r\n            to=\"/account\"\r\n            onClick={() => setSidebar(false)}\r\n            style={{ display: isSidebar && isLoggedIn ? \"block\" : \"none\" }}\r\n          >\r\n            Account\r\n          </Link> */}\r\n\r\n          <Link\r\n            className=\"sidebar-link\"\r\n            to=\"/account\"\r\n            onClick={() => setSidebar(false)}\r\n            style={{ display: isSidebar && isLoggedIn ? \"block\" : \"none\" }}\r\n          >\r\n            Account\r\n          </Link>\r\n\r\n          <Link\r\n            className=\"sidebar-link\"\r\n            to=\"/login\"\r\n            onClick={() => {\r\n              logOut();\r\n              setSidebar(false);\r\n            }}\r\n            style={{ display: isSidebar && isLoggedIn ? \"block\" : \"none\" }}\r\n          >\r\n            Log Out\r\n          </Link>\r\n\r\n          <Link\r\n            className=\"sidebar-link\"\r\n            to=\"/login\"\r\n            onClick={() => setSidebar(false)}\r\n            style={{ display: isSidebar && !isLoggedIn ? \"block\" : \"none\" }}\r\n          >\r\n            Log In\r\n          </Link>\r\n\r\n          <Link\r\n            className=\"sidebar-link\"\r\n            to=\"/register\"\r\n            onClick={() => setSidebar(false)}\r\n            style={{ display: isSidebar && !isLoggedIn ? \"block\" : \"none\" }}\r\n          >\r\n            Sign Up\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logOut })(Navbar);","import { LOG_OUT } from \"../../constants/auth.constants\";\r\nexport const logOut = () => (dispatch) => {\r\n  dispatch({ type: LOG_OUT });\r\n};","import {\r\n    GET_USER_BY_ID,\r\n    USER_ERROR,\r\n    GET_USER_POSTS,\r\n    GET_POST_BY_USER_ID,\r\n  } from \"../constants/users.constants\";\r\n  \r\n  const initialState = {\r\n    userProfile: null,\r\n    profilePosts: null,\r\n    errors: {},\r\n  };\r\n  \r\n  const users = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case GET_USER_BY_ID:\r\n        return {\r\n          ...state,\r\n          userProfile: payload,\r\n        };\r\n      case GET_USER_POSTS:\r\n      case GET_POST_BY_USER_ID:\r\n        return {\r\n          ...state,\r\n          profilePosts: payload,\r\n        };\r\n      case USER_ERROR:\r\n        return {\r\n          ...state,\r\n          userProfile: null,\r\n          profilePosts: null,\r\n          errors: payload,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default users;\r\n  ","import {\r\n    MAKE_POST,\r\n    POST_ERROR,\r\n    GET_POSTS,\r\n    GET_POST,\r\n    CLEAR_POSTS,\r\n    CLEAR_POST,\r\n    SEARCH_TOPICS,\r\n    MOST_LIKED_POSTS,\r\n    MOST_COMMENTED,\r\n    THE_MOST_RECENT_POSTS,\r\n    REMOVE_LIKE_FROM_COMMENT,\r\n  } from \"../constants/posts.constants\";\r\n  \r\n  const initialState = {\r\n    posts: [],\r\n    post: null,\r\n    isLoading: false,\r\n    errors: {},\r\n  };\r\n  \r\n  const posts = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case MAKE_POST:\r\n      case GET_POST:\r\n      case REMOVE_LIKE_FROM_COMMENT:\r\n        return {\r\n          ...state,\r\n          post: payload,\r\n          isLoading: false,\r\n          errors: {},\r\n        };\r\n      case GET_POSTS:\r\n      case THE_MOST_RECENT_POSTS:\r\n      case SEARCH_TOPICS:\r\n      case MOST_COMMENTED:\r\n      case MOST_LIKED_POSTS:\r\n        return {\r\n          ...state,\r\n          posts: payload,\r\n          errors: {},\r\n          isLoading: false,\r\n        };\r\n      case CLEAR_POSTS:\r\n        return {\r\n          ...state,\r\n          posts: [],\r\n          errors: {},\r\n        };\r\n      case CLEAR_POST:\r\n        return {\r\n          ...state,\r\n          post: null,\r\n          errors: {},\r\n        };\r\n      case POST_ERROR:\r\n        return {\r\n          ...state,\r\n          errors: payload,\r\n          isLoading: true,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default posts;","import {\r\n    AUTH_FORM_SUCCESS,\r\n    AUTH_FORM_FAIL,\r\n    AUTH_ERROR,\r\n    USER_IS_LOADED,\r\n    LOG_OUT,\r\n    CHANGE_PASSWORD_FAIL,\r\n    CHECK_PASSWORDS,\r\n    CHANGE_PROFILE,\r\n    CHANGE_USER_DATA_FAILED,\r\n    GET_USERS,\r\n    SEARCH_BY_USERNAME,\r\n  } from \"../constants/auth.constants\";\r\n  \r\n  const initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    users: [],\r\n    user: {},\r\n    errors: {},\r\n    isLoggedIn: false,\r\n    isAllowedToChangePassword: false,\r\n    isPasswordChanged: false,\r\n    isLoading: false,\r\n  };\r\n  \r\n  const auth = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case AUTH_FORM_SUCCESS:\r\n        localStorage.setItem(\"token\", payload.token);\r\n        return {\r\n          ...state,\r\n          ...payload,\r\n          isLoggedIn: true,\r\n          isAllowedToChangePassword: false,\r\n          isPasswordChanged: false,\r\n          isLoading: false,\r\n          errors: {},\r\n        };\r\n      case CHANGE_PROFILE:\r\n        return {\r\n          ...state,\r\n          ...payload,\r\n          isLoggedIn: true,\r\n          isAllowedToChangePassword: false,\r\n          isPasswordChanged: false,\r\n          isLoading: false,\r\n          errors: null,\r\n        };\r\n      case CHECK_PASSWORDS:\r\n        return {\r\n          ...state,\r\n          ...payload,\r\n          isAllowedToChangePassword: true,\r\n          errors: {},\r\n        };\r\n  \r\n      case GET_USERS:\r\n      case SEARCH_BY_USERNAME:\r\n        return {\r\n          ...state,\r\n          users: [...payload],\r\n          isLoggedIn: true,\r\n          isAllowedToChangePassword: false,\r\n          isPasswordChanged: false,\r\n          isLoading: false,\r\n          errors: null,\r\n        };\r\n      case AUTH_FORM_FAIL:\r\n      case AUTH_ERROR:\r\n      case LOG_OUT:\r\n        localStorage.removeItem(\"token\");\r\n        return {\r\n          ...state,\r\n          ...payload,\r\n          errors: payload,\r\n          user: {},\r\n          isLoggedIn: false,\r\n          isAllowedToChangePassword: false,\r\n          isPasswordChanged: false,\r\n          isLoading: false,\r\n        };\r\n      case CHANGE_PASSWORD_FAIL:\r\n      case CHANGE_USER_DATA_FAILED:\r\n        return {\r\n          ...state,\r\n          errors: payload,\r\n        };\r\n      case USER_IS_LOADED:\r\n        localStorage.getItem(\"token\");\r\n        return {\r\n          ...state,\r\n          ...payload,\r\n          user: payload,\r\n          errors: {},\r\n          isLoggedIn: true,\r\n          isAllowedToChangePassword: false,\r\n          isPasswordChanged: false,\r\n          isLoading: false,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default auth;","import { combineReducers } from \"redux\";\r\nimport users from \"./users.reducer\";\r\nimport posts from \"./posts.reducer\";\r\nimport auth from \"./auth.reducer\";\r\n\r\nexport default combineReducers({\r\n  users,\r\n  posts,\r\n  auth,\r\n});","import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n// responsible for making asynchrnous calls.\r\nimport thunk from \"redux-thunk\";\r\n// this is a method from redux that allows us to store diffrent reducers\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\n// this initialstate object is where we store our reducers.\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst IsLoggedInRoute = ({\r\n  component: Component,\r\n  auth: { isLoggedIn },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      isLoggedIn ? <Redirect to=\"/\" /> : <Component {...props} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(IsLoggedInRoute);\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isLoggedIn },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isLoggedIn ? <Redirect to=\"/login\" /> : <Component {...props} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from \"react\";\r\n\r\nconst PasswordChangeMessage = ({ message }) => {\r\n  return (\r\n    <section className=\"change-profile-section\">\r\n      <div className=\"change-password-input-wrapper flex__center\">\r\n        <span className=\"font__bold font__p p__size\">{message}</span>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PasswordChangeMessage;","import React, { useState } from \"react\";\r\nimport { checkPasswords } from \"../actions/auth.actions/checkPasswords\";\r\nimport { changePassword } from \"../actions/auth.actions/changePassword\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\nimport PasswordChangeMessage from \"../components/PasswordChangeMessage\";\r\n\r\nconst ChangePassword = ({\r\n  auth: { errors, isAllowedToChangePassword },\r\n  checkPasswords,\r\n  changePassword,\r\n}) => {\r\n  let [isSubmitted, setIsSubmitted] = useState(false);\r\n  let [areNotPasswordsFullfiled, setAreNotPasswordsFullfiled] = useState(false);\r\n  let [arePasswordsWrong, setArePasswordsWrong] = useState(false);\r\n  let [formData, setFormData] = useState({\r\n    firstPassword: \"\",\r\n    secondPassword: \"\",\r\n    newPassword: \"\",\r\n    \r\n  });\r\n\r\n  let { firstPassword, secondPassword, newPassword } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  const submitData = () => {\r\n    if (firstPassword !== secondPassword) {\r\n      setArePasswordsWrong(true);\r\n      setAreNotPasswordsFullfiled(false);\r\n      alert(\"Passwords are wrong!\");\r\n    } else if (\r\n      firstPassword === \"\" ||\r\n      firstPassword === null ||\r\n      secondPassword === \"\" ||\r\n      secondPassword === null\r\n    ) {\r\n      setAreNotPasswordsFullfiled(true);\r\n      alert(\"You haven't fullfiled some input\");\r\n    } else {\r\n      checkPasswords(firstPassword);\r\n    }\r\n  };\r\n  // const submitNewPasswordData = ({newPassword}) =>{\r\n  //   if (newPassword === null || \"\"){\r\n  //     alert(\"Password hasn't changed, something went wrong...\");\r\n  //   }\r\n  //   else{\r\n  //     changePassword(newPassword);\r\n  //     alert(\"Password has changed\");\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div className=\"change-profile-page-wrapper\">\r\n      {isAllowedToChangePassword === false && (\r\n        <form className=\"change-profile-section\">\r\n          <div className=\"change-password-input-wrapper\">\r\n            <label className=\"change-password-label p__size font__p font__bold\">\r\n              Type actual password\r\n            </label>\r\n            <input\r\n              className=\"change-password-input\"\r\n              placeholder=\"Type Something...\"\r\n              type=\"text\"\r\n              value={firstPassword}\r\n              name=\"firstPassword\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"change-password-input-wrapper\">\r\n            <label className=\"change-password-label p__size font__p font__bold\">\r\n              Type again password\r\n            </label>\r\n            <input\r\n              className=\"change-password-input\"\r\n              placeholder=\"Type Something...\"\r\n              type=\"text\"\r\n              value={secondPassword}\r\n              name=\"secondPassword\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          {/* {areNotPasswordsFullfiled && (\r\n            <ErrorMessage errorMessage=\"You haven't fullfiled some input\" />\r\n          )}\r\n\r\n          {arePasswordsWrong && (\r\n            <ErrorMessage errorMessage=\"Passwords are wrong\" />\r\n          )}\r\n\r\n          {errors === false && (errors !== {} || errors !== null) && (\r\n            <ErrorMessage errorMessage=\"Something went wrong...\" />\r\n          )} */}\r\n          <div className=\"password-page-button\" style={{\r\n            marginTop: \".5em\",\r\n            }} onClick={(e) => submitData(e)}>\r\n            Submit\r\n          </div>\r\n        </form>\r\n      )}\r\n\r\n      {isAllowedToChangePassword && (\r\n        <form className=\"change-profile-section\">\r\n          <div className=\"change-password-input-wrapper\">\r\n            <label className=\"change-password-label p__size font__p font__bold\">\r\n              Type New Password\r\n            </label>\r\n\r\n            <input\r\n              placeholder=\"Type New Password...\"\r\n              value={newPassword}\r\n              name=\"newPassword\"\r\n              onChange={(e) => onChange(e)}\r\n              type=\"text\"\r\n            />\r\n\r\n            <div className=\"password-page-button\"\r\n              style={{\r\n                marginTop: \".5em\",\r\n              }}\r\n              onClick={() => {\r\n                changePassword(newPassword);\r\n                setIsSubmitted(true);\r\n              }}> Submit\r\n            </div>\r\n          </div>\r\n        </form>\r\n      )}\r\n      {isAllowedToChangePassword && errors && isSubmitted && (\r\n        <PasswordChangeMessage message=\"Password hasn't changed, something went wrong...\" />\r\n      )}\r\n\r\n      {isAllowedToChangePassword && !errors && isSubmitted && (\r\n        <PasswordChangeMessage message=\"Password has changed\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { checkPasswords, changePassword })(\r\n  ChangePassword\r\n);\r\n","import {\r\n    CHECK_PASSWORDS,\r\n    CHANGE_PASSWORD_FAIL,\r\n  } from \"../../constants/auth.constants\";\r\n  import axios from \"axios\";\r\n  \r\n  export const checkPasswords = (passwordToCheck) => async (dispatch) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      const body = JSON.stringify({ passwordToCheck });\r\n      const res = await axios.put(\r\n        \"http://localhost:8000/api/users/check_password\",\r\n        body,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: CHECK_PASSWORDS,\r\n        payload: res.data,\r\n      });\r\n      // alert(\"Password change succesful\");\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CHANGE_PASSWORD_FAIL,\r\n        payload: error,\r\n      });\r\n    }\r\n  };","import {\r\n    CHANGE_PASSWORD,\r\n    CHANGE_PASSWORD_FAIL,\r\n  } from \"../../constants/auth.constants\";\r\n  import axios from \"axios\";\r\n  import { userLoaded } from \"./userLoaded\";\r\n  \r\n  export const changePassword = (newPassword) => async (dispatch) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      const body = JSON.stringify({ newPassword });\r\n      const res = await axios.put(\r\n        \"http://localhost:8000/api/users/change_password\",\r\n        body,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: CHANGE_PASSWORD,\r\n        payload: res.data,\r\n      });\r\n      dispatch(userLoaded());\r\n      // alert(\"Password Updated\");\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CHANGE_PASSWORD_FAIL,\r\n        payload: error,\r\n      });\r\n    }\r\n  };","import React from \"react\";\r\n\r\nconst SingleAccountData = ({ dataName, dataToShow }) => {\r\n  return (\r\n    <div className=\"font__p data-item\">\r\n      <p style={{ marginRight: \".4em\" }} className=\"font__bold\">\r\n        {dataName}\r\n      </p>{\" \"}\r\n      {dataToShow}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleAccountData;","import React from \"react\";\r\nimport SingleAccountData from \"./SingleAccountData\";\r\n\r\nconst AccountPageSection = ({ firstName, lastName, userName, email }) => {\r\n  return (\r\n    <div className=\"data-items\">\r\n      <SingleAccountData dataName=\"First Name:\" dataToShow={firstName} />\r\n\r\n      <SingleAccountData dataName=\"Last Name:\" dataToShow={lastName} />\r\n\r\n      <SingleAccountData dataName=\"Username:\" dataToShow={userName} />\r\n\r\n      <SingleAccountData dataName=\"E-mail:\" dataToShow={email} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountPageSection;","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserPosts } from \"../actions/users.actions/getUserPosts\";\r\nimport UserPostsWrapper from \"./UserPosts/UserPostsWrapper\";\r\nimport AccountPageSection from \"../components/AccountPage/AccountPageSection\";\r\nconst MyProfile = ({\r\n  getUserPosts,\r\n  auth: { firstName, lastName, userName, avatar, email },\r\n  users: { profilePosts },\r\n}) => {\r\n    useEffect(() => {\r\n      getUserPosts();\r\n    }, []);\r\n    return (\r\n    <div className=\"account-page-wrapper\">\r\n      <div className=\"data\">\r\n        <img src={avatar} alt=\"\" />\r\n\r\n        <AccountPageSection\r\n          firstName={firstName}\r\n          lastName={lastName}\r\n          email={email}\r\n          userName={userName}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"user-posts\">\r\n        <header className=\"user-posts-header-wrapper app_color_background\">\r\n          {profilePosts !== null || profilePosts !== [] ? (\r\n            <p className=\"user-posts-header font__p font__bold\">Your topics</p>\r\n          ) : (\r\n            <p className=\"user-posts-header font__p font__bold\">\r\n              You haven't made any posts yet\r\n            </p>\r\n          )}\r\n        </header>\r\n        <UserPostsWrapper posts={profilePosts} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {  getUserPosts })(MyProfile);","import React, { useEffect } from \"react\";\r\nimport LandingPage from \"./pages/LandingPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport RegisterPage from \"./pages/RegisterPage\";\r\nimport Account from \"./pages/Account\";\r\nimport ContactPage from \"./pages/ContactPage\";\r\nimport ChangeProfile from \"./pages/ChangeProfile\";\r\nimport UserProfile from \"./pages/UserProfile.js\";\r\nimport TopicPage from \"./pages/TopicPage\";\r\nimport Topics from \"./pages/Topics.js\";\r\nimport Users from \"./pages/Users\";\r\nimport AddPost from \"./pages/AddPost\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport setAuthenticationToken from \"./middleware/setAuthenticationToken\";\r\nimport { userLoaded } from \"./actions/auth.actions/userLoaded\";\r\nimport IsLoggedInRoute from \"./routes/IsLoggedInRoute\";\r\nimport PrivateRoute from \"./routes/PrivateRoute\";\r\nimport \"./App.css\";\r\nimport ChangePassword from \"./pages/ChangePassword\";\r\nimport MyProfile from \"./pages/MyProfile\";\r\n\r\nif (localStorage.getItem(\"token\")) {\r\n  setAuthenticationToken(localStorage.getItem(\"token\"));\r\n}\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    store.dispatch(userLoaded());\r\n  }, []);\r\n  return (\r\n    <Router>\r\n      <Provider store={store}>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={LandingPage} />\r\n          <Route path=\"/contact-us\" exact component={ContactPage} />\r\n          <Route path=\"/users\" exact component={Users} />\r\n          <Route path=\"/topics\" exact component={Topics} />\r\n          <Route path=\"/users/user/:user_id\" exact component={UserProfile} />\r\n          <Route path=\"/topics/topic/:topic_id\" exact component={TopicPage} />\r\n          <IsLoggedInRoute path=\"/register\" exact component={RegisterPage} />\r\n          <IsLoggedInRoute path=\"/login\" exact component={LoginPage} />\r\n          <PrivateRoute\r\n            path=\"/change-password\"\r\n            exact\r\n            component={ChangePassword}\r\n          />\r\n          <PrivateRoute path=\"/account\" exact component={Account} />\r\n          <PrivateRoute path=\"/add-post\" exact component={AddPost} />\r\n          <PrivateRoute\r\n            path=\"/change-profile\"\r\n            exact\r\n            component={ChangeProfile}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/my-profile\"\r\n            exact\r\n            component={MyProfile}\r\n          />\r\n        </Switch>\r\n      </Provider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}